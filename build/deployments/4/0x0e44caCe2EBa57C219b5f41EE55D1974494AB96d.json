{"allSourcePaths": {"0": "contracts/Certificate.sol"}, "bytecode": "608060405234801561001057600080fd5b50600080546001600160a01b031916331790556103fe806100326000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80632688af261461005157806368e66b83146100795780638da5cb5b1461008e578063b90a74e8146100b9575b600080fd5b61006461005f3660046102dc565b6100cc565b60405190151581526020015b60405180910390f35b61008c6100873660046102dc565b610146565b005b6000546100a1906001600160a01b031681565b6040516001600160a01b039091168152602001610070565b61008c6100c73660046102dc565b61021e565b6000336001600160a01b03166001836040516100e8919061038d565b908152604051908190036020019020546001600160a01b03161461010e57506000919050565b60018260405161011e919061038d565b90815260405160209181900391909101902054600160a01b900460ff16151560011492915050565b61014f816100cc565b156101a15760405162461bcd60e51b815260206004820181905260248201527f436572746966696361746520697320616c726561647920617661696c61626c6560448201526064015b60405180910390fd5b336001826040516101b2919061038d565b90815260405190819003602001812080546001600160a01b03939093166001600160a01b03199093169290921790915560019081906101f290849061038d565b9081526040519081900360200190208054911515600160a01b0260ff60a01b1990921691909117905550565b610227816100cc565b6102735760405162461bcd60e51b815260206004820152601a60248201527f436572746966696361746520646f6573206e6f742065786973740000000000006044820152606401610198565b6000600182604051610285919061038d565b90815260405190819003602001812080546001600160a01b03939093166001600160a01b0319909316929092179091556000906001906101f290849061038d565b634e487b7160e01b600052604160045260246000fd5b6000602082840312156102ee57600080fd5b813567ffffffffffffffff8082111561030657600080fd5b818401915084601f83011261031a57600080fd5b81358181111561032c5761032c6102c6565b604051601f8201601f19908116603f01168101908382118183101715610354576103546102c6565b8160405282815287602084870101111561036d57600080fd5b826020860160208301376000928101602001929092525095945050505050565b6000825160005b818110156103ae5760208186018101518583015201610394565b818111156103bd576000828501525b50919091019291505056fea2646970667358221220f3844b4228b2e6e703373d44b778c78750ae57ce25bdc8973d542e26e493a97564736f6c634300080b0033", "bytecodeSha1": "1662ca564f1ef7a2d8f3b1747c66e0521fc0446a", "coverageMap": {"statements": {"0": {"Certificate.isCertAvailable": {"0": [412, 424], "1": [434, 470]}, "Certificate.createCert": {"2": [540, 607], "3": [617, 651], "4": [661, 689]}, "Certificate.deleteCert": {"5": [759, 819], "6": [829, 863], "7": [873, 902]}}}, "branches": {"0": {"Certificate.isCertAvailable": {"8": [375, 410, false]}, "Certificate.createCert": {"9": [548, 570, true]}, "Certificate.deleteCert": {"10": [767, 788, true]}}}}, "dependencies": [], "offset": [70, 911], "pcMap": {"0": {"op": "PUSH1", "value": "0x80", "path": "0", "offset": [70, 911]}, "2": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [70, 911], "fn": null}, "4": {"op": "MSTORE", "path": "0", "offset": [70, 911], "fn": null}, "5": {"op": "CALLVALUE", "path": "0", "offset": [70, 911], "fn": null}, "6": {"op": "DUP1", "path": "0", "offset": [70, 911], "fn": null}, "7": {"op": "ISZERO", "path": "0", "offset": [70, 911], "fn": null}, "8": {"op": "PUSH2", "value": "0x10", "path": "0", "offset": [70, 911], "fn": null}, "11": {"op": "JUMPI", "path": "0", "offset": [70, 911], "fn": null}, "12": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [70, 911], "fn": null}, "14": {"op": "DUP1", "path": "0", "offset": [70, 911], "fn": null}, "15": {"op": "REVERT", "dev": "Cannot send ether to nonpayable function", "fn": null, "offset": [70, 911], "path": "0"}, "16": {"op": "JUMPDEST", "path": "0", "offset": [70, 911], "fn": null}, "17": {"op": "POP", "path": "0", "offset": [70, 911], "fn": null}, "18": {"op": "PUSH1", "value": "0x4", "path": "0", "offset": [70, 911], "fn": null}, "20": {"op": "CALLDATASIZE", "path": "0", "offset": [70, 911], "fn": null}, "21": {"op": "LT", "path": "0", "offset": [70, 911], "fn": null}, "22": {"op": "PUSH2", "value": "0x4C", "path": "0", "offset": [70, 911], "fn": null}, "25": {"op": "JUMPI", "path": "0", "offset": [70, 911], "fn": null}, "26": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [70, 911], "fn": null}, "28": {"op": "CALLDATALOAD", "path": "0", "offset": [70, 911], "fn": null}, "29": {"op": "PUSH1", "value": "0xE0", "path": "0", "offset": [70, 911], "fn": null}, "31": {"op": "SHR", "path": "0", "offset": [70, 911], "fn": null}, "32": {"op": "DUP1", "path": "0", "offset": [70, 911], "fn": null}, "33": {"op": "PUSH4", "value": "0x2688AF26", "path": "0", "offset": [70, 911], "fn": null}, "38": {"op": "EQ", "path": "0", "offset": [70, 911], "fn": null}, "39": {"op": "PUSH2", "value": "0x51", "path": "0", "offset": [70, 911], "fn": null}, "42": {"op": "JUMPI", "path": "0", "offset": [70, 911], "fn": null}, "43": {"op": "DUP1", "path": "0", "offset": [70, 911], "fn": null}, "44": {"op": "PUSH4", "value": "0x68E66B83", "path": "0", "offset": [70, 911], "fn": null}, "49": {"op": "EQ", "path": "0", "offset": [70, 911], "fn": null}, "50": {"op": "PUSH2", "value": "0x79", "path": "0", "offset": [70, 911], "fn": null}, "53": {"op": "JUMPI", "path": "0", "offset": [70, 911], "fn": null}, "54": {"op": "DUP1", "path": "0", "offset": [70, 911], "fn": null}, "55": {"op": "PUSH4", "value": "0x8DA5CB5B", "path": "0", "offset": [70, 911], "fn": null}, "60": {"op": "EQ", "path": "0", "offset": [70, 911], "fn": null}, "61": {"op": "PUSH2", "value": "0x8E", "path": "0", "offset": [70, 911], "fn": null}, "64": {"op": "JUMPI", "path": "0", "offset": [70, 911], "fn": null}, "65": {"op": "DUP1", "path": "0", "offset": [70, 911], "fn": null}, "66": {"op": "PUSH4", "value": "0xB90A74E8", "path": "0", "offset": [70, 911], "fn": null}, "71": {"op": "EQ", "path": "0", "offset": [70, 911], "fn": null}, "72": {"op": "PUSH2", "value": "0xB9", "path": "0", "offset": [70, 911], "fn": null}, "75": {"op": "JUMPI", "path": "0", "offset": [70, 911], "fn": null}, "76": {"op": "JUMPDEST", "path": "0", "offset": [70, 911], "fn": null}, "77": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [70, 911], "fn": null}, "79": {"op": "DUP1", "path": "0", "offset": [70, 911], "fn": null}, "80": {"op": "REVERT", "first_revert": true, "path": "0", "offset": [70, 911], "fn": null}, "81": {"op": "JUMPDEST", "path": "0", "offset": [290, 477], "fn": "Certificate.isCertAvailable"}, "82": {"op": "PUSH2", "value": "0x64", "path": "0", "offset": [290, 477], "fn": "Certificate.isCertAvailable"}, "85": {"op": "PUSH2", "value": "0x5F", "path": "0", "offset": [290, 477], "fn": "Certificate.isCertAvailable"}, "88": {"op": "CALLDATASIZE", "path": "0", "offset": [290, 477], "fn": "Certificate.isCertAvailable"}, "89": {"op": "PUSH1", "value": "0x4", "path": "0", "offset": [290, 477], "fn": "Certificate.isCertAvailable"}, "91": {"op": "PUSH2", "value": "0x2DC", "path": "0", "offset": [290, 477], "fn": "Certificate.isCertAvailable"}, "94": {"op": "JUMP", "jump": "i", "path": "0", "offset": [290, 477], "fn": "Certificate.isCertAvailable"}, "95": {"op": "JUMPDEST", "path": "0", "offset": [290, 477], "fn": "Certificate.isCertAvailable"}, "96": {"op": "PUSH2", "value": "0xCC", "path": "0", "offset": [290, 477], "fn": "Certificate.isCertAvailable"}, "99": {"op": "JUMP", "jump": "i", "path": "0", "offset": [290, 477], "fn": "Certificate.isCertAvailable"}, "100": {"op": "JUMPDEST", "path": "0", "offset": [290, 477], "fn": "Certificate.isCertAvailable"}, "101": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [290, 477], "fn": "Certificate.isCertAvailable"}, "103": {"op": "MLOAD", "path": "0", "offset": [290, 477], "fn": "Certificate.isCertAvailable"}, "104": {"op": "SWAP1"}, "105": {"op": "ISZERO"}, "106": {"op": "ISZERO"}, "107": {"op": "DUP2"}, "108": {"op": "MSTORE"}, "109": {"op": "PUSH1", "value": "0x20"}, "111": {"op": "ADD"}, "112": {"op": "JUMPDEST", "path": "0", "offset": [290, 477], "fn": "Certificate.isCertAvailable"}, "113": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [290, 477], "fn": "Certificate.isCertAvailable"}, "115": {"op": "MLOAD", "path": "0", "offset": [290, 477], "fn": "Certificate.isCertAvailable"}, "116": {"op": "DUP1", "path": "0", "offset": [290, 477], "fn": "Certificate.isCertAvailable"}, "117": {"op": "SWAP2", "path": "0", "offset": [290, 477], "fn": "Certificate.isCertAvailable"}, "118": {"op": "SUB", "path": "0", "offset": [290, 477], "fn": "Certificate.isCertAvailable"}, "119": {"op": "SWAP1", "path": "0", "offset": [290, 477], "fn": "Certificate.isCertAvailable"}, "120": {"op": "RETURN", "path": "0", "offset": [290, 477], "fn": "Certificate.isCertAvailable"}, "121": {"op": "JUMPDEST", "path": "0", "offset": [483, 696], "fn": "Certificate.createCert"}, "122": {"op": "PUSH2", "value": "0x8C", "path": "0", "offset": [483, 696], "fn": "Certificate.createCert"}, "125": {"op": "PUSH2", "value": "0x87", "path": "0", "offset": [483, 696], "fn": "Certificate.createCert"}, "128": {"op": "CALLDATASIZE", "path": "0", "offset": [483, 696], "fn": "Certificate.createCert"}, "129": {"op": "PUSH1", "value": "0x4", "path": "0", "offset": [483, 696], "fn": "Certificate.createCert"}, "131": {"op": "PUSH2", "value": "0x2DC", "path": "0", "offset": [483, 696], "fn": "Certificate.createCert"}, "134": {"op": "JUMP", "jump": "i", "path": "0", "offset": [483, 696], "fn": "Certificate.createCert"}, "135": {"op": "JUMPDEST", "path": "0", "offset": [483, 696], "fn": "Certificate.createCert"}, "136": {"op": "PUSH2", "value": "0x146", "path": "0", "offset": [483, 696], "fn": "Certificate.createCert"}, "139": {"op": "JUMP", "jump": "i", "path": "0", "offset": [483, 696], "fn": "Certificate.createCert"}, "140": {"op": "JUMPDEST", "path": "0", "offset": [483, 696], "fn": "Certificate.createCert"}, "141": {"op": "STOP", "path": "0", "offset": [483, 696], "fn": "Certificate.createCert"}, "142": {"op": "JUMPDEST", "path": "0", "offset": [97, 117]}, "143": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [97, 117], "fn": "Certificate.createCert"}, "145": {"op": "SLOAD", "path": "0", "offset": [97, 117], "fn": "Certificate.createCert"}, "146": {"op": "PUSH2", "value": "0xA1", "path": "0", "offset": [97, 117], "fn": "Certificate.createCert"}, "149": {"op": "SWAP1", "path": "0", "offset": [97, 117], "fn": "Certificate.createCert"}, "150": {"op": "PUSH1", "value": "0x1"}, "152": {"op": "PUSH1", "value": "0x1"}, "154": {"op": "PUSH1", "value": "0xA0"}, "156": {"op": "SHL"}, "157": {"op": "SUB"}, "158": {"op": "AND", "path": "0", "offset": [97, 117]}, "159": {"op": "DUP2", "path": "0", "offset": [97, 117], "fn": "Certificate.createCert"}, "160": {"op": "JUMP", "path": "0", "offset": [97, 117], "fn": "Certificate.createCert"}, "161": {"op": "JUMPDEST", "path": "0", "offset": [97, 117], "fn": "Certificate.createCert"}, "162": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [97, 117], "fn": "Certificate.createCert"}, "164": {"op": "MLOAD", "path": "0", "offset": [97, 117], "fn": "Certificate.createCert"}, "165": {"op": "PUSH1", "value": "0x1"}, "167": {"op": "PUSH1", "value": "0x1"}, "169": {"op": "PUSH1", "value": "0xA0"}, "171": {"op": "SHL"}, "172": {"op": "SUB"}, "173": {"op": "SWAP1"}, "174": {"op": "SWAP2"}, "175": {"op": "AND"}, "176": {"op": "DUP2"}, "177": {"op": "MSTORE"}, "178": {"op": "PUSH1", "value": "0x20"}, "180": {"op": "ADD"}, "181": {"op": "PUSH2", "value": "0x70", "path": "0", "offset": [97, 117]}, "184": {"op": "JUMP"}, "185": {"op": "JUMPDEST", "path": "0", "offset": [702, 909], "fn": "Certificate.deleteCert"}, "186": {"op": "PUSH2", "value": "0x8C", "path": "0", "offset": [702, 909], "fn": "Certificate.deleteCert"}, "189": {"op": "PUSH2", "value": "0xC7", "path": "0", "offset": [702, 909], "fn": "Certificate.deleteCert"}, "192": {"op": "CALLDATASIZE", "path": "0", "offset": [702, 909], "fn": "Certificate.deleteCert"}, "193": {"op": "PUSH1", "value": "0x4", "path": "0", "offset": [702, 909], "fn": "Certificate.deleteCert"}, "195": {"op": "PUSH2", "value": "0x2DC", "path": "0", "offset": [702, 909], "fn": "Certificate.deleteCert"}, "198": {"op": "JUMP", "jump": "i", "path": "0", "offset": [702, 909], "fn": "Certificate.deleteCert"}, "199": {"op": "JUMPDEST", "path": "0", "offset": [702, 909], "fn": "Certificate.deleteCert"}, "200": {"op": "PUSH2", "value": "0x21E", "path": "0", "offset": [702, 909], "fn": "Certificate.deleteCert"}, "203": {"op": "JUMP", "jump": "i", "path": "0", "offset": [702, 909], "fn": "Certificate.deleteCert"}, "204": {"op": "JUMPDEST", "path": "0", "offset": [290, 477], "fn": "Certificate.isCertAvailable"}, "205": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [355, 359], "fn": "Certificate.isCertAvailable"}, "207": {"op": "CALLER", "path": "0", "offset": [400, 410], "fn": "Certificate.isCertAvailable"}, "208": {"op": "PUSH1", "value": "0x1"}, "210": {"op": "PUSH1", "value": "0x1"}, "212": {"op": "PUSH1", "value": "0xA0"}, "214": {"op": "SHL"}, "215": {"op": "SUB"}, "216": {"op": "AND", "path": "0", "offset": [375, 410], "fn": "Certificate.isCertAvailable"}, "217": {"op": "PUSH1", "value": "0x1", "path": "0", "offset": [375, 380], "fn": "Certificate.isCertAvailable"}, "219": {"op": "DUP4", "path": "0", "offset": [381, 385], "fn": "Certificate.isCertAvailable"}, "220": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [375, 386], "fn": "Certificate.isCertAvailable"}, "222": {"op": "MLOAD", "path": "0", "offset": [375, 386], "fn": "Certificate.isCertAvailable"}, "223": {"op": "PUSH2", "value": "0xE8", "path": "0", "offset": [375, 386], "fn": "Certificate.isCertAvailable"}, "226": {"op": "SWAP2", "path": "0", "offset": [375, 386], "fn": "Certificate.isCertAvailable"}, "227": {"op": "SWAP1", "path": "0", "offset": [375, 386], "fn": "Certificate.isCertAvailable"}, "228": {"op": "PUSH2", "value": "0x38D", "path": "0", "offset": [375, 386], "fn": "Certificate.isCertAvailable"}, "231": {"op": "JUMP", "jump": "i", "path": "0", "offset": [375, 386], "fn": "Certificate.isCertAvailable"}, "232": {"op": "JUMPDEST", "path": "0", "offset": [375, 386], "fn": "Certificate.isCertAvailable"}, "233": {"op": "SWAP1", "path": "0", "offset": [375, 386], "fn": "Certificate.isCertAvailable"}, "234": {"op": "DUP2", "path": "0", "offset": [375, 386], "fn": "Certificate.isCertAvailable"}, "235": {"op": "MSTORE", "path": "0", "offset": [375, 386], "fn": "Certificate.isCertAvailable"}, "236": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [375, 386], "fn": "Certificate.isCertAvailable"}, "238": {"op": "MLOAD", "path": "0", "offset": [375, 386], "fn": "Certificate.isCertAvailable"}, "239": {"op": "SWAP1", "path": "0", "offset": [375, 386], "fn": "Certificate.isCertAvailable"}, "240": {"op": "DUP2", "path": "0", "offset": [375, 386], "fn": "Certificate.isCertAvailable"}, "241": {"op": "SWAP1", "path": "0", "offset": [375, 386], "fn": "Certificate.isCertAvailable"}, "242": {"op": "SUB", "path": "0", "offset": [375, 386], "fn": "Certificate.isCertAvailable"}, "243": {"op": "PUSH1", "value": "0x20", "path": "0", "offset": [375, 386], "fn": "Certificate.isCertAvailable"}, "245": {"op": "ADD", "path": "0", "offset": [375, 386], "fn": "Certificate.isCertAvailable"}, "246": {"op": "SWAP1", "path": "0", "offset": [375, 386], "fn": "Certificate.isCertAvailable"}, "247": {"op": "KECCAK256", "path": "0", "offset": [375, 386], "fn": "Certificate.isCertAvailable"}, "248": {"op": "SLOAD", "path": "0", "offset": [375, 396], "fn": "Certificate.isCertAvailable"}, "249": {"op": "PUSH1", "value": "0x1"}, "251": {"op": "PUSH1", "value": "0x1"}, "253": {"op": "PUSH1", "value": "0xA0"}, "255": {"op": "SHL"}, "256": {"op": "SUB"}, "257": {"op": "AND", "path": "0", "offset": [375, 396], "fn": "Certificate.isCertAvailable"}, "258": {"op": "EQ", "path": "0", "offset": [375, 410], "fn": "Certificate.isCertAvailable", "branch": 8}, "259": {"op": "PUSH2", "value": "0x10E", "path": "0", "offset": [371, 424], "fn": "Certificate.isCertAvailable"}, "262": {"op": "JUMPI", "path": "0", "offset": [371, 424], "fn": "Certificate.isCertAvailable", "branch": 8}, "263": {"op": "POP"}, "264": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [419, 424], "fn": "Certificate.isCertAvailable", "statement": 0}, "266": {"op": "SWAP2", "path": "0", "offset": [419, 424], "fn": "Certificate.isCertAvailable"}, "267": {"op": "SWAP1", "path": "0", "offset": [290, 477], "fn": "Certificate.isCertAvailable"}, "268": {"op": "POP"}, "269": {"op": "JUMP", "jump": "o", "path": "0", "offset": [290, 477], "fn": "Certificate.isCertAvailable"}, "270": {"op": "JUMPDEST", "path": "0", "offset": [371, 424], "fn": "Certificate.isCertAvailable"}, "271": {"op": "PUSH1", "value": "0x1", "path": "0", "offset": [441, 446], "fn": "Certificate.isCertAvailable", "statement": 1}, "273": {"op": "DUP3", "path": "0", "offset": [447, 451], "fn": "Certificate.isCertAvailable"}, "274": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [441, 452], "fn": "Certificate.isCertAvailable"}, "276": {"op": "MLOAD", "path": "0", "offset": [441, 452], "fn": "Certificate.isCertAvailable"}, "277": {"op": "PUSH2", "value": "0x11E", "path": "0", "offset": [441, 452], "fn": "Certificate.isCertAvailable"}, "280": {"op": "SWAP2", "path": "0", "offset": [441, 452], "fn": "Certificate.isCertAvailable"}, "281": {"op": "SWAP1", "path": "0", "offset": [441, 452], "fn": "Certificate.isCertAvailable"}, "282": {"op": "PUSH2", "value": "0x38D", "path": "0", "offset": [441, 452], "fn": "Certificate.isCertAvailable"}, "285": {"op": "JUMP", "jump": "i", "path": "0", "offset": [441, 452], "fn": "Certificate.isCertAvailable"}, "286": {"op": "JUMPDEST", "path": "0", "offset": [441, 452], "fn": "Certificate.isCertAvailable"}, "287": {"op": "SWAP1", "path": "0", "offset": [441, 452], "fn": "Certificate.isCertAvailable"}, "288": {"op": "DUP2", "path": "0", "offset": [441, 452], "fn": "Certificate.isCertAvailable"}, "289": {"op": "MSTORE", "path": "0", "offset": [441, 452], "fn": "Certificate.isCertAvailable"}, "290": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [441, 452], "fn": "Certificate.isCertAvailable"}, "292": {"op": "MLOAD", "path": "0", "offset": [441, 452], "fn": "Certificate.isCertAvailable"}, "293": {"op": "PUSH1", "value": "0x20", "path": "0", "offset": [441, 452], "fn": "Certificate.isCertAvailable"}, "295": {"op": "SWAP2", "path": "0", "offset": [441, 452], "fn": "Certificate.isCertAvailable"}, "296": {"op": "DUP2", "path": "0", "offset": [441, 452], "fn": "Certificate.isCertAvailable"}, "297": {"op": "SWAP1", "path": "0", "offset": [441, 452], "fn": "Certificate.isCertAvailable"}, "298": {"op": "SUB", "path": "0", "offset": [441, 452], "fn": "Certificate.isCertAvailable"}, "299": {"op": "SWAP2", "path": "0", "offset": [441, 452], "fn": "Certificate.isCertAvailable"}, "300": {"op": "SWAP1", "path": "0", "offset": [441, 452], "fn": "Certificate.isCertAvailable"}, "301": {"op": "SWAP2", "path": "0", "offset": [441, 452], "fn": "Certificate.isCertAvailable"}, "302": {"op": "ADD", "path": "0", "offset": [441, 452], "fn": "Certificate.isCertAvailable"}, "303": {"op": "SWAP1", "path": "0", "offset": [441, 452], "fn": "Certificate.isCertAvailable"}, "304": {"op": "KECCAK256", "path": "0", "offset": [441, 452], "fn": "Certificate.isCertAvailable"}, "305": {"op": "SLOAD", "path": "0", "offset": [441, 462], "fn": "Certificate.isCertAvailable"}, "306": {"op": "PUSH1", "value": "0x1"}, "308": {"op": "PUSH1", "value": "0xA0"}, "310": {"op": "SHL"}, "311": {"op": "SWAP1", "path": "0", "offset": [441, 462], "fn": "Certificate.isCertAvailable"}, "312": {"op": "DIV", "path": "0", "offset": [441, 462], "fn": "Certificate.isCertAvailable"}, "313": {"op": "PUSH1", "value": "0xFF", "path": "0", "offset": [441, 462], "fn": "Certificate.isCertAvailable"}, "315": {"op": "AND", "path": "0", "offset": [441, 462], "fn": "Certificate.isCertAvailable"}, "316": {"op": "ISZERO", "path": "0", "offset": [441, 470], "fn": "Certificate.isCertAvailable"}, "317": {"op": "ISZERO", "path": "0", "offset": [441, 470], "fn": "Certificate.isCertAvailable"}, "318": {"op": "PUSH1", "value": "0x1", "path": "0", "offset": [466, 470], "fn": "Certificate.isCertAvailable"}, "320": {"op": "EQ", "path": "0", "offset": [441, 470], "fn": "Certificate.isCertAvailable"}, "321": {"op": "SWAP3", "path": "0", "offset": [441, 470], "fn": "Certificate.isCertAvailable"}, "322": {"op": "SWAP2", "path": "0", "offset": [441, 470], "fn": "Certificate.isCertAvailable"}, "323": {"op": "POP"}, "324": {"op": "POP"}, "325": {"op": "JUMP", "jump": "o", "path": "0", "offset": [290, 477], "fn": "Certificate.isCertAvailable"}, "326": {"op": "JUMPDEST", "path": "0", "offset": [483, 696], "fn": "Certificate.createCert"}, "327": {"op": "PUSH2", "value": "0x14F", "path": "0", "offset": [549, 570], "fn": "Certificate.createCert", "statement": 2}, "330": {"op": "DUP2", "path": "0", "offset": [565, 569], "fn": "Certificate.createCert"}, "331": {"op": "PUSH2", "value": "0xCC", "path": "0", "offset": [549, 564], "fn": "Certificate.createCert"}, "334": {"op": "JUMP", "jump": "i", "path": "0", "offset": [549, 570], "fn": "Certificate.createCert"}, "335": {"op": "JUMPDEST", "path": "0", "offset": [549, 570], "fn": "Certificate.createCert"}, "336": {"op": "ISZERO", "path": "0", "offset": [548, 570], "fn": "Certificate.createCert", "branch": 9}, "337": {"op": "PUSH2", "value": "0x1A1", "path": "0", "offset": [540, 607], "fn": "Certificate.createCert"}, "340": {"op": "JUMPI", "path": "0", "offset": [540, 607], "fn": "Certificate.createCert", "branch": 9}, "341": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [540, 607], "fn": "Certificate.createCert"}, "343": {"op": "MLOAD", "path": "0", "offset": [540, 607], "fn": "Certificate.createCert"}, "344": {"op": "PUSH3", "value": "0x461BCD"}, "348": {"op": "PUSH1", "value": "0xE5"}, "350": {"op": "SHL"}, "351": {"op": "DUP2", "path": "0", "offset": [540, 607], "fn": "Certificate.createCert"}, "352": {"op": "MSTORE", "path": "0", "offset": [540, 607], "fn": "Certificate.createCert"}, "353": {"op": "PUSH1", "value": "0x20"}, "355": {"op": "PUSH1", "value": "0x4", "path": "0", "offset": [540, 607], "fn": "Certificate.createCert"}, "357": {"op": "DUP3", "path": "0", "offset": [540, 607], "fn": "Certificate.createCert"}, "358": {"op": "ADD", "path": "0", "offset": [540, 607], "fn": "Certificate.createCert"}, "359": {"op": "DUP2"}, "360": {"op": "SWAP1"}, "361": {"op": "MSTORE"}, "362": {"op": "PUSH1", "value": "0x24"}, "364": {"op": "DUP3"}, "365": {"op": "ADD"}, "366": {"op": "MSTORE"}, "367": {"op": "PUSH32", "value": "0x436572746966696361746520697320616C726561647920617661696C61626C65"}, "400": {"op": "PUSH1", "value": "0x44"}, "402": {"op": "DUP3"}, "403": {"op": "ADD"}, "404": {"op": "MSTORE"}, "405": {"op": "PUSH1", "value": "0x64"}, "407": {"op": "ADD"}, "408": {"op": "JUMPDEST", "path": "0", "offset": [540, 607], "fn": "Certificate.createCert"}, "409": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [540, 607], "fn": "Certificate.createCert"}, "411": {"op": "MLOAD", "path": "0", "offset": [540, 607], "fn": "Certificate.createCert"}, "412": {"op": "DUP1", "path": "0", "offset": [540, 607], "fn": "Certificate.createCert"}, "413": {"op": "SWAP2", "path": "0", "offset": [540, 607], "fn": "Certificate.createCert"}, "414": {"op": "SUB", "path": "0", "offset": [540, 607], "fn": "Certificate.createCert"}, "415": {"op": "SWAP1", "path": "0", "offset": [540, 607], "fn": "Certificate.createCert"}, "416": {"op": "REVERT", "path": "0", "offset": [540, 607], "optimizer_revert": true, "fn": "Certificate.createCert"}, "417": {"op": "JUMPDEST", "path": "0", "offset": [540, 607], "fn": "Certificate.createCert"}, "418": {"op": "CALLER", "path": "0", "offset": [641, 651], "fn": "Certificate.createCert", "statement": 3}, "419": {"op": "PUSH1", "value": "0x1", "path": "0", "offset": [617, 622], "fn": "Certificate.createCert"}, "421": {"op": "DUP3", "path": "0", "offset": [623, 627], "fn": "Certificate.createCert"}, "422": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [617, 628], "fn": "Certificate.createCert"}, "424": {"op": "MLOAD", "path": "0", "offset": [617, 628], "fn": "Certificate.createCert"}, "425": {"op": "PUSH2", "value": "0x1B2", "path": "0", "offset": [617, 628], "fn": "Certificate.createCert"}, "428": {"op": "SWAP2", "path": "0", "offset": [617, 628], "fn": "Certificate.createCert"}, "429": {"op": "SWAP1", "path": "0", "offset": [617, 628], "fn": "Certificate.createCert"}, "430": {"op": "PUSH2", "value": "0x38D", "path": "0", "offset": [617, 628], "fn": "Certificate.createCert"}, "433": {"op": "JUMP", "jump": "i", "path": "0", "offset": [617, 628], "fn": "Certificate.createCert"}, "434": {"op": "JUMPDEST", "path": "0", "offset": [617, 628], "fn": "Certificate.createCert"}, "435": {"op": "SWAP1", "path": "0", "offset": [617, 628], "fn": "Certificate.createCert"}, "436": {"op": "DUP2", "path": "0", "offset": [617, 628], "fn": "Certificate.createCert"}, "437": {"op": "MSTORE", "path": "0", "offset": [617, 628], "fn": "Certificate.createCert"}, "438": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [617, 628], "fn": "Certificate.createCert"}, "440": {"op": "MLOAD", "path": "0", "offset": [617, 628], "fn": "Certificate.createCert"}, "441": {"op": "SWAP1", "path": "0", "offset": [617, 628], "fn": "Certificate.createCert"}, "442": {"op": "DUP2", "path": "0", "offset": [617, 628], "fn": "Certificate.createCert"}, "443": {"op": "SWAP1", "path": "0", "offset": [617, 628], "fn": "Certificate.createCert"}, "444": {"op": "SUB", "path": "0", "offset": [617, 628], "fn": "Certificate.createCert"}, "445": {"op": "PUSH1", "value": "0x20", "path": "0", "offset": [617, 628], "fn": "Certificate.createCert"}, "447": {"op": "ADD", "path": "0", "offset": [617, 628], "fn": "Certificate.createCert"}, "448": {"op": "DUP2", "path": "0", "offset": [617, 628], "fn": "Certificate.createCert"}, "449": {"op": "KECCAK256", "path": "0", "offset": [617, 628], "fn": "Certificate.createCert"}, "450": {"op": "DUP1", "path": "0", "offset": [617, 651], "fn": "Certificate.createCert"}, "451": {"op": "SLOAD", "path": "0", "offset": [617, 651], "fn": "Certificate.createCert"}, "452": {"op": "PUSH1", "value": "0x1"}, "454": {"op": "PUSH1", "value": "0x1"}, "456": {"op": "PUSH1", "value": "0xA0"}, "458": {"op": "SHL"}, "459": {"op": "SUB"}, "460": {"op": "SWAP4", "path": "0", "offset": [617, 651], "fn": "Certificate.createCert"}, "461": {"op": "SWAP1", "path": "0", "offset": [617, 651], "fn": "Certificate.createCert"}, "462": {"op": "SWAP4", "path": "0", "offset": [617, 651], "fn": "Certificate.createCert"}, "463": {"op": "AND", "path": "0", "offset": [617, 651], "fn": "Certificate.createCert"}, "464": {"op": "PUSH1", "value": "0x1"}, "466": {"op": "PUSH1", "value": "0x1"}, "468": {"op": "PUSH1", "value": "0xA0"}, "470": {"op": "SHL"}, "471": {"op": "SUB"}, "472": {"op": "NOT"}, "473": {"op": "SWAP1", "path": "0", "offset": [617, 651], "fn": "Certificate.createCert"}, "474": {"op": "SWAP4", "path": "0", "offset": [617, 651], "fn": "Certificate.createCert"}, "475": {"op": "AND", "path": "0", "offset": [617, 651], "fn": "Certificate.createCert"}, "476": {"op": "SWAP3", "path": "0", "offset": [617, 651], "fn": "Certificate.createCert"}, "477": {"op": "SWAP1", "path": "0", "offset": [617, 651], "fn": "Certificate.createCert"}, "478": {"op": "SWAP3", "path": "0", "offset": [617, 651], "fn": "Certificate.createCert"}, "479": {"op": "OR", "path": "0", "offset": [617, 651], "fn": "Certificate.createCert"}, "480": {"op": "SWAP1", "path": "0", "offset": [617, 651], "fn": "Certificate.createCert"}, "481": {"op": "SWAP2", "path": "0", "offset": [617, 651], "fn": "Certificate.createCert"}, "482": {"op": "SSTORE", "path": "0", "offset": [617, 651], "fn": "Certificate.createCert"}, "483": {"op": "PUSH1", "value": "0x1", "path": "0", "offset": [617, 651], "fn": "Certificate.createCert"}, "485": {"op": "SWAP1", "path": "0", "offset": [617, 651], "fn": "Certificate.createCert"}, "486": {"op": "DUP2", "path": "0", "offset": [617, 651], "fn": "Certificate.createCert"}, "487": {"op": "SWAP1", "path": "0", "offset": [617, 651], "fn": "Certificate.createCert"}, "488": {"op": "PUSH2", "value": "0x1F2", "path": "0", "offset": [661, 672], "fn": "Certificate.createCert", "statement": 4}, "491": {"op": "SWAP1", "path": "0", "offset": [661, 672], "fn": "Certificate.createCert"}, "492": {"op": "DUP5", "path": "0", "offset": [667, 671], "fn": "Certificate.createCert"}, "493": {"op": "SWAP1", "path": "0", "offset": [667, 671], "fn": "Certificate.createCert"}, "494": {"op": "PUSH2", "value": "0x38D", "path": "0", "offset": [661, 672], "fn": "Certificate.createCert"}, "497": {"op": "JUMP", "jump": "i", "path": "0", "offset": [661, 672], "fn": "Certificate.createCert"}, "498": {"op": "JUMPDEST", "path": "0", "offset": [661, 672], "fn": "Certificate.createCert"}, "499": {"op": "SWAP1", "path": "0", "offset": [661, 672], "fn": "Certificate.createCert"}, "500": {"op": "DUP2", "path": "0", "offset": [661, 672], "fn": "Certificate.createCert"}, "501": {"op": "MSTORE", "path": "0", "offset": [661, 672], "fn": "Certificate.createCert"}, "502": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [661, 672], "fn": "Certificate.createCert"}, "504": {"op": "MLOAD", "path": "0", "offset": [661, 672], "fn": "Certificate.createCert"}, "505": {"op": "SWAP1", "path": "0", "offset": [661, 672], "fn": "Certificate.createCert"}, "506": {"op": "DUP2", "path": "0", "offset": [661, 672], "fn": "Certificate.createCert"}, "507": {"op": "SWAP1", "path": "0", "offset": [661, 672], "fn": "Certificate.createCert"}, "508": {"op": "SUB", "path": "0", "offset": [661, 672], "fn": "Certificate.createCert"}, "509": {"op": "PUSH1", "value": "0x20", "path": "0", "offset": [661, 672], "fn": "Certificate.createCert"}, "511": {"op": "ADD", "path": "0", "offset": [661, 672], "fn": "Certificate.createCert"}, "512": {"op": "SWAP1", "path": "0", "offset": [661, 672], "fn": "Certificate.createCert"}, "513": {"op": "KECCAK256", "path": "0", "offset": [661, 672], "fn": "Certificate.createCert"}, "514": {"op": "DUP1", "path": "0", "offset": [661, 689], "fn": "Certificate.createCert"}, "515": {"op": "SLOAD", "path": "0", "offset": [661, 689], "fn": "Certificate.createCert"}, "516": {"op": "SWAP2", "path": "0", "offset": [661, 689], "fn": "Certificate.createCert"}, "517": {"op": "ISZERO", "path": "0", "offset": [661, 689], "fn": "Certificate.createCert"}, "518": {"op": "ISZERO", "path": "0", "offset": [661, 689], "fn": "Certificate.createCert"}, "519": {"op": "PUSH1", "value": "0x1"}, "521": {"op": "PUSH1", "value": "0xA0"}, "523": {"op": "SHL"}, "524": {"op": "MUL", "path": "0", "offset": [661, 689], "fn": "Certificate.createCert"}, "525": {"op": "PUSH1", "value": "0xFF"}, "527": {"op": "PUSH1", "value": "0xA0"}, "529": {"op": "SHL"}, "530": {"op": "NOT"}, "531": {"op": "SWAP1", "path": "0", "offset": [661, 689], "fn": "Certificate.createCert"}, "532": {"op": "SWAP3", "path": "0", "offset": [661, 689], "fn": "Certificate.createCert"}, "533": {"op": "AND", "path": "0", "offset": [661, 689], "fn": "Certificate.createCert"}, "534": {"op": "SWAP2", "path": "0", "offset": [661, 689], "fn": "Certificate.createCert"}, "535": {"op": "SWAP1", "path": "0", "offset": [661, 689], "fn": "Certificate.createCert"}, "536": {"op": "SWAP2", "path": "0", "offset": [661, 689], "fn": "Certificate.createCert"}, "537": {"op": "OR", "path": "0", "offset": [661, 689], "fn": "Certificate.createCert"}, "538": {"op": "SWAP1", "path": "0", "offset": [661, 689], "fn": "Certificate.createCert"}, "539": {"op": "SSTORE", "path": "0", "offset": [661, 689], "fn": "Certificate.createCert"}, "540": {"op": "POP"}, "541": {"op": "JUMP", "jump": "o", "path": "0", "offset": [483, 696], "fn": "Certificate.createCert"}, "542": {"op": "JUMPDEST", "path": "0", "offset": [702, 909], "fn": "Certificate.deleteCert"}, "543": {"op": "PUSH2", "value": "0x227", "path": "0", "offset": [767, 788], "fn": "Certificate.deleteCert", "statement": 5}, "546": {"op": "DUP2", "path": "0", "offset": [783, 787], "fn": "Certificate.deleteCert"}, "547": {"op": "PUSH2", "value": "0xCC", "path": "0", "offset": [767, 782], "fn": "Certificate.deleteCert"}, "550": {"op": "JUMP", "jump": "i", "path": "0", "offset": [767, 788], "fn": "Certificate.deleteCert"}, "551": {"op": "JUMPDEST", "path": "0", "offset": [767, 788], "fn": "Certificate.deleteCert", "branch": 10}, "552": {"op": "PUSH2", "value": "0x273", "path": "0", "offset": [759, 819], "fn": "Certificate.deleteCert"}, "555": {"op": "JUMPI", "path": "0", "offset": [759, 819], "fn": "Certificate.deleteCert", "branch": 10}, "556": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [759, 819], "fn": "Certificate.deleteCert"}, "558": {"op": "MLOAD", "path": "0", "offset": [759, 819], "fn": "Certificate.deleteCert"}, "559": {"op": "PUSH3", "value": "0x461BCD"}, "563": {"op": "PUSH1", "value": "0xE5"}, "565": {"op": "SHL"}, "566": {"op": "DUP2", "path": "0", "offset": [759, 819], "fn": "Certificate.deleteCert"}, "567": {"op": "MSTORE", "path": "0", "offset": [759, 819], "fn": "Certificate.deleteCert"}, "568": {"op": "PUSH1", "value": "0x20"}, "570": {"op": "PUSH1", "value": "0x4", "path": "0", "offset": [759, 819], "fn": "Certificate.deleteCert"}, "572": {"op": "DUP3", "path": "0", "offset": [759, 819], "fn": "Certificate.deleteCert"}, "573": {"op": "ADD", "path": "0", "offset": [759, 819], "fn": "Certificate.deleteCert"}, "574": {"op": "MSTORE"}, "575": {"op": "PUSH1", "value": "0x1A"}, "577": {"op": "PUSH1", "value": "0x24"}, "579": {"op": "DUP3"}, "580": {"op": "ADD"}, "581": {"op": "MSTORE"}, "582": {"op": "PUSH32", "value": "0x436572746966696361746520646F6573206E6F74206578697374000000000000"}, "615": {"op": "PUSH1", "value": "0x44"}, "617": {"op": "DUP3"}, "618": {"op": "ADD"}, "619": {"op": "MSTORE"}, "620": {"op": "PUSH1", "value": "0x64"}, "622": {"op": "ADD"}, "623": {"op": "PUSH2", "value": "0x198", "path": "0", "offset": [759, 819], "fn": "Certificate.deleteCert"}, "626": {"op": "JUMP"}, "627": {"op": "JUMPDEST", "path": "0", "offset": [759, 819], "fn": "Certificate.deleteCert"}, "628": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [861, 862], "fn": "Certificate.deleteCert", "statement": 6}, "630": {"op": "PUSH1", "value": "0x1", "path": "0", "offset": [829, 834], "fn": "Certificate.deleteCert"}, "632": {"op": "DUP3", "path": "0", "offset": [835, 839], "fn": "Certificate.deleteCert"}, "633": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [829, 840], "fn": "Certificate.deleteCert"}, "635": {"op": "MLOAD", "path": "0", "offset": [829, 840], "fn": "Certificate.deleteCert"}, "636": {"op": "PUSH2", "value": "0x285", "path": "0", "offset": [829, 840], "fn": "Certificate.deleteCert"}, "639": {"op": "SWAP2", "path": "0", "offset": [829, 840], "fn": "Certificate.deleteCert"}, "640": {"op": "SWAP1", "path": "0", "offset": [829, 840], "fn": "Certificate.deleteCert"}, "641": {"op": "PUSH2", "value": "0x38D", "path": "0", "offset": [829, 840], "fn": "Certificate.deleteCert"}, "644": {"op": "JUMP", "jump": "i", "path": "0", "offset": [829, 840], "fn": "Certificate.deleteCert"}, "645": {"op": "JUMPDEST", "path": "0", "offset": [829, 840], "fn": "Certificate.deleteCert"}, "646": {"op": "SWAP1", "path": "0", "offset": [829, 840], "fn": "Certificate.deleteCert"}, "647": {"op": "DUP2", "path": "0", "offset": [829, 840], "fn": "Certificate.deleteCert"}, "648": {"op": "MSTORE", "path": "0", "offset": [829, 840], "fn": "Certificate.deleteCert"}, "649": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [829, 840], "fn": "Certificate.deleteCert"}, "651": {"op": "MLOAD", "path": "0", "offset": [829, 840], "fn": "Certificate.deleteCert"}, "652": {"op": "SWAP1", "path": "0", "offset": [829, 840], "fn": "Certificate.deleteCert"}, "653": {"op": "DUP2", "path": "0", "offset": [829, 840], "fn": "Certificate.deleteCert"}, "654": {"op": "SWAP1", "path": "0", "offset": [829, 840], "fn": "Certificate.deleteCert"}, "655": {"op": "SUB", "path": "0", "offset": [829, 840], "fn": "Certificate.deleteCert"}, "656": {"op": "PUSH1", "value": "0x20", "path": "0", "offset": [829, 840], "fn": "Certificate.deleteCert"}, "658": {"op": "ADD", "path": "0", "offset": [829, 840], "fn": "Certificate.deleteCert"}, "659": {"op": "DUP2", "path": "0", "offset": [829, 840], "fn": "Certificate.deleteCert"}, "660": {"op": "KECCAK256", "path": "0", "offset": [829, 840], "fn": "Certificate.deleteCert"}, "661": {"op": "DUP1", "path": "0", "offset": [829, 863], "fn": "Certificate.deleteCert"}, "662": {"op": "SLOAD", "path": "0", "offset": [829, 863], "fn": "Certificate.deleteCert"}, "663": {"op": "PUSH1", "value": "0x1"}, "665": {"op": "PUSH1", "value": "0x1"}, "667": {"op": "PUSH1", "value": "0xA0"}, "669": {"op": "SHL"}, "670": {"op": "SUB"}, "671": {"op": "SWAP4", "path": "0", "offset": [829, 863], "fn": "Certificate.deleteCert"}, "672": {"op": "SWAP1", "path": "0", "offset": [829, 863], "fn": "Certificate.deleteCert"}, "673": {"op": "SWAP4", "path": "0", "offset": [829, 863], "fn": "Certificate.deleteCert"}, "674": {"op": "AND", "path": "0", "offset": [829, 863], "fn": "Certificate.deleteCert"}, "675": {"op": "PUSH1", "value": "0x1"}, "677": {"op": "PUSH1", "value": "0x1"}, "679": {"op": "PUSH1", "value": "0xA0"}, "681": {"op": "SHL"}, "682": {"op": "SUB"}, "683": {"op": "NOT"}, "684": {"op": "SWAP1", "path": "0", "offset": [829, 863], "fn": "Certificate.deleteCert"}, "685": {"op": "SWAP4", "path": "0", "offset": [829, 863], "fn": "Certificate.deleteCert"}, "686": {"op": "AND", "path": "0", "offset": [829, 863], "fn": "Certificate.deleteCert"}, "687": {"op": "SWAP3", "path": "0", "offset": [829, 863], "fn": "Certificate.deleteCert"}, "688": {"op": "SWAP1", "path": "0", "offset": [829, 863], "fn": "Certificate.deleteCert"}, "689": {"op": "SWAP3", "path": "0", "offset": [829, 863], "fn": "Certificate.deleteCert"}, "690": {"op": "OR", "path": "0", "offset": [829, 863], "fn": "Certificate.deleteCert"}, "691": {"op": "SWAP1", "path": "0", "offset": [829, 863], "fn": "Certificate.deleteCert"}, "692": {"op": "SWAP2", "path": "0", "offset": [829, 863], "fn": "Certificate.deleteCert"}, "693": {"op": "SSTORE", "path": "0", "offset": [829, 863], "fn": "Certificate.deleteCert"}, "694": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [829, 850], "fn": "Certificate.deleteCert"}, "696": {"op": "SWAP1", "path": "0", "offset": [829, 850], "fn": "Certificate.deleteCert"}, "697": {"op": "PUSH1", "value": "0x1", "path": "0", "offset": [829, 863], "fn": "Certificate.deleteCert"}, "699": {"op": "SWAP1", "path": "0", "offset": [829, 863], "fn": "Certificate.deleteCert"}, "700": {"op": "PUSH2", "value": "0x1F2", "path": "0", "offset": [873, 884], "fn": "Certificate.deleteCert", "statement": 7}, "703": {"op": "SWAP1", "path": "0", "offset": [873, 884], "fn": "Certificate.deleteCert"}, "704": {"op": "DUP5", "path": "0", "offset": [879, 883], "fn": "Certificate.deleteCert"}, "705": {"op": "SWAP1", "path": "0", "offset": [879, 883], "fn": "Certificate.deleteCert"}, "706": {"op": "PUSH2", "value": "0x38D", "path": "0", "offset": [873, 884], "fn": "Certificate.deleteCert"}, "709": {"op": "JUMP", "jump": "i", "path": "0", "offset": [873, 884], "fn": "Certificate.deleteCert"}, "710": {"op": "JUMPDEST"}, "711": {"op": "PUSH4", "value": "0x4E487B71"}, "716": {"op": "PUSH1", "value": "0xE0"}, "718": {"op": "SHL"}, "719": {"op": "PUSH1", "value": "0x0"}, "721": {"op": "MSTORE"}, "722": {"op": "PUSH1", "value": "0x41"}, "724": {"op": "PUSH1", "value": "0x4"}, "726": {"op": "MSTORE"}, "727": {"op": "PUSH1", "value": "0x24"}, "729": {"op": "PUSH1", "value": "0x0"}, "731": {"op": "REVERT"}, "732": {"op": "JUMPDEST"}, "733": {"op": "PUSH1", "value": "0x0"}, "735": {"op": "PUSH1", "value": "0x20"}, "737": {"op": "DUP3"}, "738": {"op": "DUP5"}, "739": {"op": "SUB"}, "740": {"op": "SLT"}, "741": {"op": "ISZERO"}, "742": {"op": "PUSH2", "value": "0x2EE"}, "745": {"op": "JUMPI"}, "746": {"op": "PUSH1", "value": "0x0"}, "748": {"op": "DUP1"}, "749": {"op": "REVERT"}, "750": {"op": "JUMPDEST"}, "751": {"op": "DUP2"}, "752": {"op": "CALLDATALOAD"}, "753": {"op": "PUSH8", "value": "0xFFFFFFFFFFFFFFFF"}, "762": {"op": "DUP1"}, "763": {"op": "DUP3"}, "764": {"op": "GT"}, "765": {"op": "ISZERO"}, "766": {"op": "PUSH2", "value": "0x306"}, "769": {"op": "JUMPI"}, "770": {"op": "PUSH1", "value": "0x0"}, "772": {"op": "DUP1"}, "773": {"op": "REVERT"}, "774": {"op": "JUMPDEST"}, "775": {"op": "DUP2"}, "776": {"op": "DUP5"}, "777": {"op": "ADD"}, "778": {"op": "SWAP2"}, "779": {"op": "POP"}, "780": {"op": "DUP5"}, "781": {"op": "PUSH1", "value": "0x1F"}, "783": {"op": "DUP4"}, "784": {"op": "ADD"}, "785": {"op": "SLT"}, "786": {"op": "PUSH2", "value": "0x31A"}, "789": {"op": "JUMPI"}, "790": {"op": "PUSH1", "value": "0x0"}, "792": {"op": "DUP1"}, "793": {"op": "REVERT"}, "794": {"op": "JUMPDEST"}, "795": {"op": "DUP2"}, "796": {"op": "CALLDATALOAD"}, "797": {"op": "DUP2"}, "798": {"op": "DUP2"}, "799": {"op": "GT"}, "800": {"op": "ISZERO"}, "801": {"op": "PUSH2", "value": "0x32C"}, "804": {"op": "JUMPI"}, "805": {"op": "PUSH2", "value": "0x32C"}, "808": {"op": "PUSH2", "value": "0x2C6"}, "811": {"op": "JUMP", "jump": "i"}, "812": {"op": "JUMPDEST"}, "813": {"op": "PUSH1", "value": "0x40"}, "815": {"op": "MLOAD"}, "816": {"op": "PUSH1", "value": "0x1F"}, "818": {"op": "DUP3"}, "819": {"op": "ADD"}, "820": {"op": "PUSH1", "value": "0x1F"}, "822": {"op": "NOT"}, "823": {"op": "SWAP1"}, "824": {"op": "DUP2"}, "825": {"op": "AND"}, "826": {"op": "PUSH1", "value": "0x3F"}, "828": {"op": "ADD"}, "829": {"op": "AND"}, "830": {"op": "DUP2"}, "831": {"op": "ADD"}, "832": {"op": "SWAP1"}, "833": {"op": "DUP4"}, "834": {"op": "DUP3"}, "835": {"op": "GT"}, "836": {"op": "DUP2"}, "837": {"op": "DUP4"}, "838": {"op": "LT"}, "839": {"op": "OR"}, "840": {"op": "ISZERO"}, "841": {"op": "PUSH2", "value": "0x354"}, "844": {"op": "JUMPI"}, "845": {"op": "PUSH2", "value": "0x354"}, "848": {"op": "PUSH2", "value": "0x2C6"}, "851": {"op": "JUMP", "jump": "i"}, "852": {"op": "JUMPDEST"}, "853": {"op": "DUP2"}, "854": {"op": "PUSH1", "value": "0x40"}, "856": {"op": "MSTORE"}, "857": {"op": "DUP3"}, "858": {"op": "DUP2"}, "859": {"op": "MSTORE"}, "860": {"op": "DUP8"}, "861": {"op": "PUSH1", "value": "0x20"}, "863": {"op": "DUP5"}, "864": {"op": "DUP8"}, "865": {"op": "ADD"}, "866": {"op": "ADD"}, "867": {"op": "GT"}, "868": {"op": "ISZERO"}, "869": {"op": "PUSH2", "value": "0x36D"}, "872": {"op": "JUMPI"}, "873": {"op": "PUSH1", "value": "0x0"}, "875": {"op": "DUP1"}, "876": {"op": "REVERT"}, "877": {"op": "JUMPDEST"}, "878": {"op": "DUP3"}, "879": {"op": "PUSH1", "value": "0x20"}, "881": {"op": "DUP7"}, "882": {"op": "ADD"}, "883": {"op": "PUSH1", "value": "0x20"}, "885": {"op": "DUP4"}, "886": {"op": "ADD"}, "887": {"op": "CALLDATACOPY"}, "888": {"op": "PUSH1", "value": "0x0"}, "890": {"op": "SWAP3"}, "891": {"op": "DUP2"}, "892": {"op": "ADD"}, "893": {"op": "PUSH1", "value": "0x20"}, "895": {"op": "ADD"}, "896": {"op": "SWAP3"}, "897": {"op": "SWAP1"}, "898": {"op": "SWAP3"}, "899": {"op": "MSTORE"}, "900": {"op": "POP"}, "901": {"op": "SWAP6"}, "902": {"op": "SWAP5"}, "903": {"op": "POP"}, "904": {"op": "POP"}, "905": {"op": "POP"}, "906": {"op": "POP"}, "907": {"op": "POP"}, "908": {"op": "JUMP", "jump": "o"}, "909": {"op": "JUMPDEST"}, "910": {"op": "PUSH1", "value": "0x0"}, "912": {"op": "DUP3"}, "913": {"op": "MLOAD"}, "914": {"op": "PUSH1", "value": "0x0"}, "916": {"op": "JUMPDEST"}, "917": {"op": "DUP2"}, "918": {"op": "DUP2"}, "919": {"op": "LT"}, "920": {"op": "ISZERO"}, "921": {"op": "PUSH2", "value": "0x3AE"}, "924": {"op": "JUMPI"}, "925": {"op": "PUSH1", "value": "0x20"}, "927": {"op": "DUP2"}, "928": {"op": "DUP7"}, "929": {"op": "ADD"}, "930": {"op": "DUP2"}, "931": {"op": "ADD"}, "932": {"op": "MLOAD"}, "933": {"op": "DUP6"}, "934": {"op": "DUP4"}, "935": {"op": "ADD"}, "936": {"op": "MSTORE"}, "937": {"op": "ADD"}, "938": {"op": "PUSH2", "value": "0x394"}, "941": {"op": "JUMP"}, "942": {"op": "JUMPDEST"}, "943": {"op": "DUP2"}, "944": {"op": "DUP2"}, "945": {"op": "GT"}, "946": {"op": "ISZERO"}, "947": {"op": "PUSH2", "value": "0x3BD"}, "950": {"op": "JUMPI"}, "951": {"op": "PUSH1", "value": "0x0"}, "953": {"op": "DUP3"}, "954": {"op": "DUP6"}, "955": {"op": "ADD"}, "956": {"op": "MSTORE"}, "957": {"op": "JUMPDEST"}, "958": {"op": "POP"}, "959": {"op": "SWAP2"}, "960": {"op": "SWAP1"}, "961": {"op": "SWAP2"}, "962": {"op": "ADD"}, "963": {"op": "SWAP3"}, "964": {"op": "SWAP2"}, "965": {"op": "POP"}, "966": {"op": "POP"}, "967": {"op": "JUMP", "jump": "o"}}, "type": "contract", "abi": [{"inputs": [], "stateMutability": "nonpayable", "type": "constructor", "name": "constructor"}, {"inputs": [{"internalType": "string", "name": "cert", "type": "string"}], "name": "createCert", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "string", "name": "cert", "type": "string"}], "name": "deleteCert", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "string", "name": "cert", "type": "string"}], "name": "isCertAvailable", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "owner", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}], "ast": {"absolutePath": "contracts/Certificate.sol", "exportedSymbols": {"Certificate": [107]}, "id": 108, "license": "GPL-3.0", "nodeType": "SourceUnit", "nodes": [{"id": 1, "literals": ["solidity", ">=", "0.7", ".0", "<", "0.9", ".0"], "nodeType": "PragmaDirective", "src": "37:31:0"}, {"abstract": false, "baseContracts": [], "canonicalName": "Certificate", "contractDependencies": [], "contractKind": "contract", "fullyImplemented": true, "id": 107, "linearizedBaseContracts": [107], "name": "Certificate", "nameLocation": "79:11:0", "nodeType": "ContractDefinition", "nodes": [{"constant": false, "functionSelector": "8da5cb5b", "id": 3, "mutability": "mutable", "name": "owner", "nameLocation": "112:5:0", "nodeType": "VariableDeclaration", "scope": 107, "src": "97:20:0", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 2, "name": "address", "nodeType": "ElementaryTypeName", "src": "97:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "public"}, {"canonicalName": "Certificate.cert", "id": 8, "members": [{"constant": false, "id": 5, "mutability": "mutable", "name": "recipient", "nameLocation": "154:9:0", "nodeType": "VariableDeclaration", "scope": 8, "src": "146:17:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 4, "name": "address", "nodeType": "ElementaryTypeName", "src": "146:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 7, "mutability": "mutable", "name": "confirmed", "nameLocation": "178:9:0", "nodeType": "VariableDeclaration", "scope": 8, "src": "173:14:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 6, "name": "bool", "nodeType": "ElementaryTypeName", "src": "173:4:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "name": "cert", "nameLocation": "131:4:0", "nodeType": "StructDefinition", "scope": 107, "src": "124:70:0", "visibility": "public"}, {"constant": false, "id": 13, "mutability": "mutable", "name": "certs", "nameLocation": "223:5:0", "nodeType": "VariableDeclaration", "scope": 107, "src": "199:29:0", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_cert_$8_storage_$", "typeString": "mapping(string => struct Certificate.cert)"}, "typeName": {"id": 12, "keyType": {"id": 9, "name": "string", "nodeType": "ElementaryTypeName", "src": "207:6:0", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "nodeType": "Mapping", "src": "199:23:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_cert_$8_storage_$", "typeString": "mapping(string => struct Certificate.cert)"}, "valueType": {"id": 11, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 10, "name": "cert", "nodeType": "IdentifierPath", "referencedDeclaration": 8, "src": "217:4:0"}, "referencedDeclaration": 8, "src": "217:4:0", "typeDescriptions": {"typeIdentifier": "t_struct$_cert_$8_storage_ptr", "typeString": "struct Certificate.cert"}}}, "visibility": "internal"}, {"body": {"id": 21, "nodeType": "Block", "src": "249:35:0", "statements": [{"expression": {"id": 19, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 16, "name": "owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3, "src": "259:5:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"id": 17, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "267:3:0", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 18, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "267:10:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "259:18:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 20, "nodeType": "ExpressionStatement", "src": "259:18:0"}]}, "id": 22, "implemented": true, "kind": "constructor", "modifiers": [], "name": "", "nameLocation": "-1:-1:-1", "nodeType": "FunctionDefinition", "parameters": {"id": 14, "nodeType": "ParameterList", "parameters": [], "src": "246:2:0"}, "returnParameters": {"id": 15, "nodeType": "ParameterList", "parameters": [], "src": "249:0:0"}, "scope": 107, "src": "235:49:0", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"body": {"id": 46, "nodeType": "Block", "src": "361:116:0", "statements": [{"condition": {"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 35, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"baseExpression": {"id": 29, "name": "certs", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13, "src": "375:5:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_cert_$8_storage_$", "typeString": "mapping(string memory => struct Certificate.cert storage ref)"}}, "id": 31, "indexExpression": {"id": 30, "name": "cert", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 24, "src": "381:4:0", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "375:11:0", "typeDescriptions": {"typeIdentifier": "t_struct$_cert_$8_storage", "typeString": "struct Certificate.cert storage ref"}}, "id": 32, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "recipient", "nodeType": "MemberAccess", "referencedDeclaration": 5, "src": "375:21:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"expression": {"id": 33, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "400:3:0", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 34, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "400:10:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "375:35:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 38, "nodeType": "IfStatement", "src": "371:53:0", "trueBody": {"expression": {"hexValue": "66616c7365", "id": 36, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "419:5:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "false"}, "functionReturnParameters": 28, "id": 37, "nodeType": "Return", "src": "412:12:0"}}, {"expression": {"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 44, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"baseExpression": {"id": 39, "name": "certs", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13, "src": "441:5:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_cert_$8_storage_$", "typeString": "mapping(string memory => struct Certificate.cert storage ref)"}}, "id": 41, "indexExpression": {"id": 40, "name": "cert", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 24, "src": "447:4:0", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "441:11:0", "typeDescriptions": {"typeIdentifier": "t_struct$_cert_$8_storage", "typeString": "struct Certificate.cert storage ref"}}, "id": 42, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "confirmed", "nodeType": "MemberAccess", "referencedDeclaration": 7, "src": "441:21:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"hexValue": "74727565", "id": 43, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "466:4:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, "src": "441:29:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "functionReturnParameters": 28, "id": 45, "nodeType": "Return", "src": "434:36:0"}]}, "functionSelector": "2688af26", "id": 47, "implemented": true, "kind": "function", "modifiers": [], "name": "isCertAvailable", "nameLocation": "299:15:0", "nodeType": "FunctionDefinition", "parameters": {"id": 25, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 24, "mutability": "mutable", "name": "cert", "nameLocation": "329:4:0", "nodeType": "VariableDeclaration", "scope": 47, "src": "315:18:0", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 23, "name": "string", "nodeType": "ElementaryTypeName", "src": "315:6:0", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}], "src": "314:20:0"}, "returnParameters": {"id": 28, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 27, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 47, "src": "355:4:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 26, "name": "bool", "nodeType": "ElementaryTypeName", "src": "355:4:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "354:6:0"}, "scope": 107, "src": "290:187:0", "stateMutability": "view", "virtual": false, "visibility": "public"}, {"body": {"id": 75, "nodeType": "Block", "src": "530:166:0", "statements": [{"expression": {"arguments": [{"id": 56, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "!", "prefix": true, "src": "548:22:0", "subExpression": {"arguments": [{"id": 54, "name": "cert", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 49, "src": "565:4:0", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}], "id": 53, "name": "isCertAvailable", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 47, "src": "549:15:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$_t_bool_$", "typeString": "function (string memory) view returns (bool)"}}, "id": 55, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "549:21:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "436572746966696361746520697320616c726561647920617661696c61626c65", "id": 57, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "572:34:0", "typeDescriptions": {"typeIdentifier": "t_stringliteral_253e0273f082fbc7011107f90a64de4767f5a3144ffac8858c7fcabf801d67c1", "typeString": "literal_string \"Certificate is already available\""}, "value": "Certificate is already available"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_253e0273f082fbc7011107f90a64de4767f5a3144ffac8858c7fcabf801d67c1", "typeString": "literal_string \"Certificate is already available\""}], "id": 52, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "540:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 58, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "540:67:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 59, "nodeType": "ExpressionStatement", "src": "540:67:0"}, {"expression": {"id": 66, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"baseExpression": {"id": 60, "name": "certs", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13, "src": "617:5:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_cert_$8_storage_$", "typeString": "mapping(string memory => struct Certificate.cert storage ref)"}}, "id": 62, "indexExpression": {"id": 61, "name": "cert", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 49, "src": "623:4:0", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "617:11:0", "typeDescriptions": {"typeIdentifier": "t_struct$_cert_$8_storage", "typeString": "struct Certificate.cert storage ref"}}, "id": 63, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "recipient", "nodeType": "MemberAccess", "referencedDeclaration": 5, "src": "617:21:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"id": 64, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "641:3:0", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 65, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "641:10:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "617:34:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 67, "nodeType": "ExpressionStatement", "src": "617:34:0"}, {"expression": {"id": 73, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"baseExpression": {"id": 68, "name": "certs", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13, "src": "661:5:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_cert_$8_storage_$", "typeString": "mapping(string memory => struct Certificate.cert storage ref)"}}, "id": 70, "indexExpression": {"id": 69, "name": "cert", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 49, "src": "667:4:0", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "661:11:0", "typeDescriptions": {"typeIdentifier": "t_struct$_cert_$8_storage", "typeString": "struct Certificate.cert storage ref"}}, "id": 71, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "confirmed", "nodeType": "MemberAccess", "referencedDeclaration": 7, "src": "661:21:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"hexValue": "74727565", "id": 72, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "685:4:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, "src": "661:28:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 74, "nodeType": "ExpressionStatement", "src": "661:28:0"}]}, "functionSelector": "68e66b83", "id": 76, "implemented": true, "kind": "function", "modifiers": [], "name": "createCert", "nameLocation": "492:10:0", "nodeType": "FunctionDefinition", "parameters": {"id": 50, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 49, "mutability": "mutable", "name": "cert", "nameLocation": "517:4:0", "nodeType": "VariableDeclaration", "scope": 76, "src": "503:18:0", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 48, "name": "string", "nodeType": "ElementaryTypeName", "src": "503:6:0", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}], "src": "502:20:0"}, "returnParameters": {"id": 51, "nodeType": "ParameterList", "parameters": [], "src": "530:0:0"}, "scope": 107, "src": "483:213:0", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"body": {"id": 105, "nodeType": "Block", "src": "749:160:0", "statements": [{"expression": {"arguments": [{"arguments": [{"id": 83, "name": "cert", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 78, "src": "783:4:0", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}], "id": 82, "name": "isCertAvailable", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 47, "src": "767:15:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$_t_bool_$", "typeString": "function (string memory) view returns (bool)"}}, "id": 84, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "767:21:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "436572746966696361746520646f6573206e6f74206578697374", "id": 85, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "790:28:0", "typeDescriptions": {"typeIdentifier": "t_stringliteral_9d20443e17d9a8e16c568dd4ab2493d5221811aa77c022551b229fdf124b3bdf", "typeString": "literal_string \"Certificate does not exist\""}, "value": "Certificate does not exist"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_9d20443e17d9a8e16c568dd4ab2493d5221811aa77c022551b229fdf124b3bdf", "typeString": "literal_string \"Certificate does not exist\""}], "id": 81, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "759:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 86, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "759:60:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 87, "nodeType": "ExpressionStatement", "src": "759:60:0"}, {"expression": {"id": 96, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"baseExpression": {"id": 88, "name": "certs", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13, "src": "829:5:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_cert_$8_storage_$", "typeString": "mapping(string memory => struct Certificate.cert storage ref)"}}, "id": 90, "indexExpression": {"id": 89, "name": "cert", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 78, "src": "835:4:0", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "829:11:0", "typeDescriptions": {"typeIdentifier": "t_struct$_cert_$8_storage", "typeString": "struct Certificate.cert storage ref"}}, "id": 91, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "recipient", "nodeType": "MemberAccess", "referencedDeclaration": 5, "src": "829:21:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"hexValue": "30", "id": 94, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "861:1:0", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 93, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "853:7:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 92, "name": "address", "nodeType": "ElementaryTypeName", "src": "853:7:0", "typeDescriptions": {}}}, "id": 95, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "853:10:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "829:34:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 97, "nodeType": "ExpressionStatement", "src": "829:34:0"}, {"expression": {"id": 103, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"baseExpression": {"id": 98, "name": "certs", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13, "src": "873:5:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_cert_$8_storage_$", "typeString": "mapping(string memory => struct Certificate.cert storage ref)"}}, "id": 100, "indexExpression": {"id": 99, "name": "cert", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 78, "src": "879:4:0", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "873:11:0", "typeDescriptions": {"typeIdentifier": "t_struct$_cert_$8_storage", "typeString": "struct Certificate.cert storage ref"}}, "id": 101, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "confirmed", "nodeType": "MemberAccess", "referencedDeclaration": 7, "src": "873:21:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"hexValue": "66616c7365", "id": 102, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "897:5:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "false"}, "src": "873:29:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 104, "nodeType": "ExpressionStatement", "src": "873:29:0"}]}, "functionSelector": "b90a74e8", "id": 106, "implemented": true, "kind": "function", "modifiers": [], "name": "deleteCert", "nameLocation": "711:10:0", "nodeType": "FunctionDefinition", "parameters": {"id": 79, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 78, "mutability": "mutable", "name": "cert", "nameLocation": "736:4:0", "nodeType": "VariableDeclaration", "scope": 106, "src": "722:18:0", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 77, "name": "string", "nodeType": "ElementaryTypeName", "src": "722:6:0", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}], "src": "721:20:0"}, "returnParameters": {"id": 80, "nodeType": "ParameterList", "parameters": [], "src": "749:0:0"}, "scope": 107, "src": "702:207:0", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}], "scope": 108, "src": "70:841:0", "usedErrors": []}], "src": "37:875:0"}, "compiler": {"version": "0.8.11+commit.d7f03943", "evm_version": "istanbul", "optimizer": {"enabled": true, "runs": 200}}, "contractName": "Certificate", "deployedBytecode": "608060405234801561001057600080fd5b506004361061004c5760003560e01c80632688af261461005157806368e66b83146100795780638da5cb5b1461008e578063b90a74e8146100b9575b600080fd5b61006461005f3660046102dc565b6100cc565b60405190151581526020015b60405180910390f35b61008c6100873660046102dc565b610146565b005b6000546100a1906001600160a01b031681565b6040516001600160a01b039091168152602001610070565b61008c6100c73660046102dc565b61021e565b6000336001600160a01b03166001836040516100e8919061038d565b908152604051908190036020019020546001600160a01b03161461010e57506000919050565b60018260405161011e919061038d565b90815260405160209181900391909101902054600160a01b900460ff16151560011492915050565b61014f816100cc565b156101a15760405162461bcd60e51b815260206004820181905260248201527f436572746966696361746520697320616c726561647920617661696c61626c6560448201526064015b60405180910390fd5b336001826040516101b2919061038d565b90815260405190819003602001812080546001600160a01b03939093166001600160a01b03199093169290921790915560019081906101f290849061038d565b9081526040519081900360200190208054911515600160a01b0260ff60a01b1990921691909117905550565b610227816100cc565b6102735760405162461bcd60e51b815260206004820152601a60248201527f436572746966696361746520646f6573206e6f742065786973740000000000006044820152606401610198565b6000600182604051610285919061038d565b90815260405190819003602001812080546001600160a01b03939093166001600160a01b0319909316929092179091556000906001906101f290849061038d565b634e487b7160e01b600052604160045260246000fd5b6000602082840312156102ee57600080fd5b813567ffffffffffffffff8082111561030657600080fd5b818401915084601f83011261031a57600080fd5b81358181111561032c5761032c6102c6565b604051601f8201601f19908116603f01168101908382118183101715610354576103546102c6565b8160405282815287602084870101111561036d57600080fd5b826020860160208301376000928101602001929092525095945050505050565b6000825160005b818110156103ae5760208186018101518583015201610394565b818111156103bd576000828501525b50919091019291505056fea2646970667358221220f3844b4228b2e6e703373d44b778c78750ae57ce25bdc8973d542e26e493a97564736f6c634300080b0033", "deployedSourceMap": "70:841:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;290:187;;;;;;:::i;:::-;;:::i;:::-;;;1238:14:1;;1231:22;1213:41;;1201:2;1186:18;290:187:0;;;;;;;;483:213;;;;;;:::i;:::-;;:::i;:::-;;97:20;;;;;-1:-1:-1;;;;;97:20:0;;;;;;-1:-1:-1;;;;;1429:32:1;;;1411:51;;1399:2;1384:18;97:20:0;1265:203:1;702:207:0;;;;;;:::i;:::-;;:::i;290:187::-;355:4;400:10;-1:-1:-1;;;;;375:35:0;:5;381:4;375:11;;;;;;:::i;:::-;;;;;;;;;;;;;;:21;-1:-1:-1;;;;;375:21:0;:35;371:53;;-1:-1:-1;419:5:0;;290:187;-1:-1:-1;290:187:0:o;371:53::-;441:5;447:4;441:11;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:21;-1:-1:-1;;;441:21:0;;;;:29;;466:4;441:29;;;-1:-1:-1;;290:187:0:o;483:213::-;549:21;565:4;549:15;:21::i;:::-;548:22;540:67;;;;-1:-1:-1;;;540:67:0;;2108:2:1;540:67:0;;;2090:21:1;;;2127:18;;;2120:30;2186:34;2166:18;;;2159:62;2238:18;;540:67:0;;;;;;;;;641:10;617:5;623:4;617:11;;;;;;:::i;:::-;;;;;;;;;;;;;;:34;;-1:-1:-1;;;;;617:34:0;;;;-1:-1:-1;;;;;;617:34:0;;;;;;;;;;;;;;661:11;;667:4;;661:11;:::i;:::-;;;;;;;;;;;;;;:28;;;;;-1:-1:-1;;;661:28:0;-1:-1:-1;;;;661:28:0;;;;;;;;;-1:-1:-1;483:213:0:o;702:207::-;767:21;783:4;767:15;:21::i;:::-;759:60;;;;-1:-1:-1;;;759:60:0;;2469:2:1;759:60:0;;;2451:21:1;2508:2;2488:18;;;2481:30;2547:28;2527:18;;;2520:56;2593:18;;759:60:0;2267:350:1;759:60:0;861:1;829:5;835:4;829:11;;;;;;:::i;:::-;;;;;;;;;;;;;;:34;;-1:-1:-1;;;;;829:34:0;;;;-1:-1:-1;;;;;;829:34:0;;;;;;;;;;:21;;:34;;873:11;;879:4;;873:11;:::i;14:127:1:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:922;215:6;268:2;256:9;247:7;243:23;239:32;236:52;;;284:1;281;274:12;236:52;324:9;311:23;353:18;394:2;386:6;383:14;380:34;;;410:1;407;400:12;380:34;448:6;437:9;433:22;423:32;;493:7;486:4;482:2;478:13;474:27;464:55;;515:1;512;505:12;464:55;551:2;538:16;573:2;569;566:10;563:36;;;579:18;;:::i;:::-;654:2;648:9;622:2;708:13;;-1:-1:-1;;704:22:1;;;728:2;700:31;696:40;684:53;;;752:18;;;772:22;;;749:46;746:72;;;798:18;;:::i;:::-;838:10;834:2;827:22;873:2;865:6;858:18;913:7;908:2;903;899;895:11;891:20;888:33;885:53;;;934:1;931;924:12;885:53;990:2;985;981;977:11;972:2;964:6;960:15;947:46;1035:1;1013:15;;;1030:2;1009:24;1002:35;;;;-1:-1:-1;1017:6:1;146:922;-1:-1:-1;;;;;146:922:1:o;1473:428::-;1604:3;1642:6;1636:13;1667:1;1677:129;1691:6;1688:1;1685:13;1677:129;;;1789:4;1773:14;;;1769:25;;1763:32;1750:11;;;1743:53;1706:12;1677:129;;;1824:6;1821:1;1818:13;1815:48;;;1859:1;1850:6;1845:3;1841:16;1834:27;1815:48;-1:-1:-1;1879:16:1;;;;;1473:428;-1:-1:-1;;1473:428:1:o", "language": "Solidity", "natspec": {"methods": {}, "kind": "dev", "version": 1}, "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2688AF26 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x68E66B83 EQ PUSH2 0x79 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x8E JUMPI DUP1 PUSH4 0xB90A74E8 EQ PUSH2 0xB9 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0x5F CALLDATASIZE PUSH1 0x4 PUSH2 0x2DC JUMP JUMPDEST PUSH2 0xCC JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8C PUSH2 0x87 CALLDATASIZE PUSH1 0x4 PUSH2 0x2DC JUMP JUMPDEST PUSH2 0x146 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0xA1 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x70 JUMP JUMPDEST PUSH2 0x8C PUSH2 0xC7 CALLDATASIZE PUSH1 0x4 PUSH2 0x2DC JUMP JUMPDEST PUSH2 0x21E JUMP JUMPDEST PUSH1 0x0 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 DUP4 PUSH1 0x40 MLOAD PUSH2 0xE8 SWAP2 SWAP1 PUSH2 0x38D JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x10E JUMPI POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x40 MLOAD PUSH2 0x11E SWAP2 SWAP1 PUSH2 0x38D JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD PUSH1 0x20 SWAP2 DUP2 SWAP1 SUB SWAP2 SWAP1 SWAP2 ADD SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x14F DUP2 PUSH2 0xCC JUMP JUMPDEST ISZERO PUSH2 0x1A1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436572746966696361746520697320616C726561647920617661696C61626C65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x1 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0x38D JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH1 0x1 SWAP1 DUP2 SWAP1 PUSH2 0x1F2 SWAP1 DUP5 SWAP1 PUSH2 0x38D JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 DUP1 SLOAD SWAP2 ISZERO ISZERO PUSH1 0x1 PUSH1 0xA0 SHL MUL PUSH1 0xFF PUSH1 0xA0 SHL NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x227 DUP2 PUSH2 0xCC JUMP JUMPDEST PUSH2 0x273 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436572746966696361746520646F6573206E6F74206578697374000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x198 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 PUSH1 0x40 MLOAD PUSH2 0x285 SWAP2 SWAP1 PUSH2 0x38D JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x1F2 SWAP1 DUP5 SWAP1 PUSH2 0x38D JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x306 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP5 ADD SWAP2 POP DUP5 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x31A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x32C JUMPI PUSH2 0x32C PUSH2 0x2C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x354 JUMPI PUSH2 0x354 PUSH2 0x2C6 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP8 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x36D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP3 DUP2 ADD PUSH1 0x20 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3AE JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD DUP6 DUP4 ADD MSTORE ADD PUSH2 0x394 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x3BD JUMPI PUSH1 0x0 DUP3 DUP6 ADD MSTORE JUMPDEST POP SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURN DUP5 0x4B TIMESTAMP 0x28 0xB2 0xE6 0xE7 SUB CALLDATACOPY RETURNDATASIZE DIFFICULTY 0xB7 PUSH25 0xC78750AE57CE25BDC8973D542E26E493A97564736F6C634300 ADDMOD SIGNEXTEND STOP CALLER ", "sha1": "6109184faa6697eea0d09c35b30ebb6fa7e95573", "source": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity >=0.7.0 <0.9.0;\n\ncontract Certificate {\n    address public owner;\n\n    struct cert {\n        address recipient;\n        bool confirmed;\n    }\n    mapping(string => cert) certs;\n\n    constructor() {\n        owner = msg.sender;\n    }\n\n    function isCertAvailable(string memory cert) public view returns(bool) {\n        if (certs[cert].recipient != msg.sender) return false;\n        return certs[cert].confirmed == true;\n    }\n\n    function createCert(string memory cert) public {\n        require(!isCertAvailable(cert), \"Certificate is already available\");\n        certs[cert].recipient = msg.sender;\n        certs[cert].confirmed = true;\n    }\n\n    function deleteCert(string memory cert) public {\n        require(isCertAvailable(cert), \"Certificate does not exist\");\n        certs[cert].recipient = address(0);\n        certs[cert].confirmed = false;\n    }\n}\n", "sourceMap": "70:841:0:-:0;;;235:49;;;;;;;;;-1:-1:-1;259:5:0;:18;;-1:-1:-1;;;;;;259:18:0;267:10;259:18;;;70:841;;;;;;", "sourcePath": "contracts/Certificate.sol", "deployment": {"address": "0x0e44caCe2EBa57C219b5f41EE55D1974494AB96d", "chainid": "4", "blockHeight": 10679759}}