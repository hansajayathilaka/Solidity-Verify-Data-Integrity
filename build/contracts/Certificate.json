{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "certs",
      "outputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "confirmed",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "cert",
          "type": "string"
        }
      ],
      "name": "createCert",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "cert",
          "type": "string"
        }
      ],
      "name": "deleteCert",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "cert",
          "type": "string"
        }
      ],
      "name": "isCertAvailable",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/Certificate.sol"
  },
  "ast": {
    "absolutePath": "contracts/Certificate.sol",
    "exportedSymbols": {
      "Certificate": [
        97
      ]
    },
    "id": 98,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.7",
          ".0",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "37:31:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Certificate",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 97,
        "linearizedBaseContracts": [
          97
        ],
        "name": "Certificate",
        "nameLocation": "79:11:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "8da5cb5b",
            "id": 3,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "112:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 97,
            "src": "97:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "97:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "Certificate.cert",
            "id": 8,
            "members": [
              {
                "constant": false,
                "id": 5,
                "mutability": "mutable",
                "name": "recipient",
                "nameLocation": "154:9:0",
                "nodeType": "VariableDeclaration",
                "scope": 8,
                "src": "146:17:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 4,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "146:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7,
                "mutability": "mutable",
                "name": "confirmed",
                "nameLocation": "178:9:0",
                "nodeType": "VariableDeclaration",
                "scope": 8,
                "src": "173:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 6,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "173:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "cert",
            "nameLocation": "131:4:0",
            "nodeType": "StructDefinition",
            "scope": 97,
            "src": "124:70:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "cebdc1c5",
            "id": 13,
            "mutability": "mutable",
            "name": "certs",
            "nameLocation": "230:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 97,
            "src": "199:36:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_cert_$8_storage_$",
              "typeString": "mapping(string => struct Certificate.cert)"
            },
            "typeName": {
              "id": 12,
              "keyType": {
                "id": 9,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "207:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "199:23:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_cert_$8_storage_$",
                "typeString": "mapping(string => struct Certificate.cert)"
              },
              "valueType": {
                "id": 11,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 10,
                  "name": "cert",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8,
                  "src": "217:4:0"
                },
                "referencedDeclaration": 8,
                "src": "217:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_cert_$8_storage_ptr",
                  "typeString": "struct Certificate.cert"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 21,
              "nodeType": "Block",
              "src": "256:35:0",
              "statements": [
                {
                  "expression": {
                    "id": 19,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 16,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3,
                      "src": "266:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 17,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "274:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 18,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "274:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "266:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 20,
                  "nodeType": "ExpressionStatement",
                  "src": "266:18:0"
                }
              ]
            },
            "id": 22,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "253:2:0"
            },
            "returnParameters": {
              "id": 15,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "256:0:0"
            },
            "scope": 97,
            "src": "242:49:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 36,
              "nodeType": "Block",
              "src": "368:118:0",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 34,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 29,
                          "name": "certs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13,
                          "src": "450:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_cert_$8_storage_$",
                            "typeString": "mapping(string memory => struct Certificate.cert storage ref)"
                          }
                        },
                        "id": 31,
                        "indexExpression": {
                          "id": 30,
                          "name": "cert",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24,
                          "src": "456:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "450:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_cert_$8_storage",
                          "typeString": "struct Certificate.cert storage ref"
                        }
                      },
                      "id": 32,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "confirmed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7,
                      "src": "450:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "74727565",
                      "id": 33,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "475:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "450:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 28,
                  "id": 35,
                  "nodeType": "Return",
                  "src": "443:36:0"
                }
              ]
            },
            "functionSelector": "2688af26",
            "id": 37,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isCertAvailable",
            "nameLocation": "306:15:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 25,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24,
                  "mutability": "mutable",
                  "name": "cert",
                  "nameLocation": "336:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 37,
                  "src": "322:18:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 23,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "322:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "321:20:0"
            },
            "returnParameters": {
              "id": 28,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 37,
                  "src": "362:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 26,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "362:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "361:6:0"
            },
            "scope": 97,
            "src": "297:189:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 65,
              "nodeType": "Block",
              "src": "539:166:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 46,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "557:22:0",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 44,
                              "name": "cert",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 39,
                              "src": "574:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 43,
                            "name": "isCertAvailable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37,
                            "src": "558:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$_t_bool_$",
                              "typeString": "function (string memory) view returns (bool)"
                            }
                          },
                          "id": 45,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "558:21:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436572746966696361746520697320616c726561647920617661696c61626c65",
                        "id": 47,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "581:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_253e0273f082fbc7011107f90a64de4767f5a3144ffac8858c7fcabf801d67c1",
                          "typeString": "literal_string \"Certificate is already available\""
                        },
                        "value": "Certificate is already available"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_253e0273f082fbc7011107f90a64de4767f5a3144ffac8858c7fcabf801d67c1",
                          "typeString": "literal_string \"Certificate is already available\""
                        }
                      ],
                      "id": 42,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "549:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 48,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "549:67:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49,
                  "nodeType": "ExpressionStatement",
                  "src": "549:67:0"
                },
                {
                  "expression": {
                    "id": 56,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 50,
                          "name": "certs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13,
                          "src": "626:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_cert_$8_storage_$",
                            "typeString": "mapping(string memory => struct Certificate.cert storage ref)"
                          }
                        },
                        "id": 52,
                        "indexExpression": {
                          "id": 51,
                          "name": "cert",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39,
                          "src": "632:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "626:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_cert_$8_storage",
                          "typeString": "struct Certificate.cert storage ref"
                        }
                      },
                      "id": 53,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "recipient",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5,
                      "src": "626:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 54,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "650:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 55,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "650:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "626:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 57,
                  "nodeType": "ExpressionStatement",
                  "src": "626:34:0"
                },
                {
                  "expression": {
                    "id": 63,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 58,
                          "name": "certs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13,
                          "src": "670:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_cert_$8_storage_$",
                            "typeString": "mapping(string memory => struct Certificate.cert storage ref)"
                          }
                        },
                        "id": 60,
                        "indexExpression": {
                          "id": 59,
                          "name": "cert",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39,
                          "src": "676:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "670:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_cert_$8_storage",
                          "typeString": "struct Certificate.cert storage ref"
                        }
                      },
                      "id": 61,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "confirmed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7,
                      "src": "670:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 62,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "694:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "670:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 64,
                  "nodeType": "ExpressionStatement",
                  "src": "670:28:0"
                }
              ]
            },
            "functionSelector": "68e66b83",
            "id": 66,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createCert",
            "nameLocation": "501:10:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 40,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 39,
                  "mutability": "mutable",
                  "name": "cert",
                  "nameLocation": "526:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 66,
                  "src": "512:18:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 38,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "512:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "511:20:0"
            },
            "returnParameters": {
              "id": 41,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "539:0:0"
            },
            "scope": 97,
            "src": "492:213:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 95,
              "nodeType": "Block",
              "src": "758:160:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 73,
                            "name": "cert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68,
                            "src": "792:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "id": 72,
                          "name": "isCertAvailable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37,
                          "src": "776:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (string memory) view returns (bool)"
                          }
                        },
                        "id": 74,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "776:21:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436572746966696361746520646f6573206e6f74206578697374",
                        "id": 75,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "799:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9d20443e17d9a8e16c568dd4ab2493d5221811aa77c022551b229fdf124b3bdf",
                          "typeString": "literal_string \"Certificate does not exist\""
                        },
                        "value": "Certificate does not exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9d20443e17d9a8e16c568dd4ab2493d5221811aa77c022551b229fdf124b3bdf",
                          "typeString": "literal_string \"Certificate does not exist\""
                        }
                      ],
                      "id": 71,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "768:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 76,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "768:60:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77,
                  "nodeType": "ExpressionStatement",
                  "src": "768:60:0"
                },
                {
                  "expression": {
                    "id": 86,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 78,
                          "name": "certs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13,
                          "src": "838:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_cert_$8_storage_$",
                            "typeString": "mapping(string memory => struct Certificate.cert storage ref)"
                          }
                        },
                        "id": 80,
                        "indexExpression": {
                          "id": 79,
                          "name": "cert",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 68,
                          "src": "844:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "838:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_cert_$8_storage",
                          "typeString": "struct Certificate.cert storage ref"
                        }
                      },
                      "id": 81,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "recipient",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5,
                      "src": "838:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 84,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "870:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 83,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "862:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 82,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "862:7:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 85,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "862:10:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "838:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 87,
                  "nodeType": "ExpressionStatement",
                  "src": "838:34:0"
                },
                {
                  "expression": {
                    "id": 93,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 88,
                          "name": "certs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13,
                          "src": "882:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_cert_$8_storage_$",
                            "typeString": "mapping(string memory => struct Certificate.cert storage ref)"
                          }
                        },
                        "id": 90,
                        "indexExpression": {
                          "id": 89,
                          "name": "cert",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 68,
                          "src": "888:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "882:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_cert_$8_storage",
                          "typeString": "struct Certificate.cert storage ref"
                        }
                      },
                      "id": 91,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "confirmed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7,
                      "src": "882:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 92,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "906:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "882:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 94,
                  "nodeType": "ExpressionStatement",
                  "src": "882:29:0"
                }
              ]
            },
            "functionSelector": "b90a74e8",
            "id": 96,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deleteCert",
            "nameLocation": "720:10:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 69,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 68,
                  "mutability": "mutable",
                  "name": "cert",
                  "nameLocation": "745:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 96,
                  "src": "731:18:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 67,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "731:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "730:20:0"
            },
            "returnParameters": {
              "id": 70,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "758:0:0"
            },
            "scope": 97,
            "src": "711:207:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 98,
        "src": "70:850:0",
        "usedErrors": []
      }
    ],
    "src": "37:884:0"
  },
  "bytecode": "608060405234801561001057600080fd5b50600080546001600160a01b03191633179055610428806100326000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80632688af261461005c57806368e66b83146100845780638da5cb5b14610099578063b90a74e8146100c4578063cebdc1c5146100d7575b600080fd5b61006f61006a366004610306565b610136565b60405190151581526020015b60405180910390f35b610097610092366004610306565b610170565b005b6000546100ac906001600160a01b031681565b6040516001600160a01b03909116815260200161007b565b6100976100d2366004610306565b610248565b6101176100e5366004610306565b80516020818301810180516001825292820191909301209152546001600160a01b03811690600160a01b900460ff1682565b604080516001600160a01b03909316835290151560208301520161007b565b600060018260405161014891906103b7565b90815260405160209181900391909101902054600160a01b900460ff16151560011492915050565b61017981610136565b156101cb5760405162461bcd60e51b815260206004820181905260248201527f436572746966696361746520697320616c726561647920617661696c61626c6560448201526064015b60405180910390fd5b336001826040516101dc91906103b7565b90815260405190819003602001812080546001600160a01b03939093166001600160a01b031990931692909217909155600190819061021c9084906103b7565b9081526040519081900360200190208054911515600160a01b0260ff60a01b1990921691909117905550565b61025181610136565b61029d5760405162461bcd60e51b815260206004820152601a60248201527f436572746966696361746520646f6573206e6f7420657869737400000000000060448201526064016101c2565b60006001826040516102af91906103b7565b90815260405190819003602001812080546001600160a01b03939093166001600160a01b03199093169290921790915560009060019061021c9084906103b7565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561031857600080fd5b813567ffffffffffffffff8082111561033057600080fd5b818401915084601f83011261034457600080fd5b813581811115610356576103566102f0565b604051601f8201601f19908116603f0116810190838211818310171561037e5761037e6102f0565b8160405282815287602084870101111561039757600080fd5b826020860160208301376000928101602001929092525095945050505050565b6000825160005b818110156103d857602081860181015185830152016103be565b818111156103e7576000828501525b50919091019291505056fea264697066735822122081533500f222fedef7b35c3ac6468c0c080fed7f27d5ec9c324e65ff8b83fddc64736f6c634300080b0033",
  "bytecodeSha1": "95ec1f31c7641429d2b5bb06a9ea6922ab49a223",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.11+commit.d7f03943"
  },
  "contractName": "Certificate",
  "coverageMap": {
    "branches": {
      "0": {
        "Certificate.createCert": {
          "7": [
            557,
            579,
            true
          ]
        },
        "Certificate.deleteCert": {
          "8": [
            776,
            797,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "Certificate.createCert": {
          "1": [
            549,
            616
          ],
          "2": [
            626,
            660
          ],
          "3": [
            670,
            698
          ]
        },
        "Certificate.deleteCert": {
          "4": [
            768,
            828
          ],
          "5": [
            838,
            872
          ],
          "6": [
            882,
            911
          ]
        },
        "Certificate.isCertAvailable": {
          "0": [
            443,
            479
          ]
        }
      }
    }
  },
  "dependencies": [],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100575760003560e01c80632688af261461005c57806368e66b83146100845780638da5cb5b14610099578063b90a74e8146100c4578063cebdc1c5146100d7575b600080fd5b61006f61006a366004610306565b610136565b60405190151581526020015b60405180910390f35b610097610092366004610306565b610170565b005b6000546100ac906001600160a01b031681565b6040516001600160a01b03909116815260200161007b565b6100976100d2366004610306565b610248565b6101176100e5366004610306565b80516020818301810180516001825292820191909301209152546001600160a01b03811690600160a01b900460ff1682565b604080516001600160a01b03909316835290151560208301520161007b565b600060018260405161014891906103b7565b90815260405160209181900391909101902054600160a01b900460ff16151560011492915050565b61017981610136565b156101cb5760405162461bcd60e51b815260206004820181905260248201527f436572746966696361746520697320616c726561647920617661696c61626c6560448201526064015b60405180910390fd5b336001826040516101dc91906103b7565b90815260405190819003602001812080546001600160a01b03939093166001600160a01b031990931692909217909155600190819061021c9084906103b7565b9081526040519081900360200190208054911515600160a01b0260ff60a01b1990921691909117905550565b61025181610136565b61029d5760405162461bcd60e51b815260206004820152601a60248201527f436572746966696361746520646f6573206e6f7420657869737400000000000060448201526064016101c2565b60006001826040516102af91906103b7565b90815260405190819003602001812080546001600160a01b03939093166001600160a01b03199093169290921790915560009060019061021c9084906103b7565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561031857600080fd5b813567ffffffffffffffff8082111561033057600080fd5b818401915084601f83011261034457600080fd5b813581811115610356576103566102f0565b604051601f8201601f19908116603f0116810190838211818310171561037e5761037e6102f0565b8160405282815287602084870101111561039757600080fd5b826020860160208301376000928101602001929092525095945050505050565b6000825160005b818110156103d857602081860181015185830152016103be565b818111156103e7576000828501525b50919091019291505056fea264697066735822122081533500f222fedef7b35c3ac6468c0c080fed7f27d5ec9c324e65ff8b83fddc64736f6c634300080b0033",
  "deployedSourceMap": "70:850:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;297:189;;;;;;:::i;:::-;;:::i;:::-;;;1238:14:1;;1231:22;1213:41;;1201:2;1186:18;297:189:0;;;;;;;;492:213;;;;;;:::i;:::-;;:::i;:::-;;97:20;;;;;-1:-1:-1;;;;;97:20:0;;;;;;-1:-1:-1;;;;;1429:32:1;;;1411:51;;1399:2;1384:18;97:20:0;1265:203:1;711:207:0;;;;;;:::i;:::-;;:::i;199:36::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;199:36:0;;;-1:-1:-1;;;199:36:0;;;;;;;;;;-1:-1:-1;;;;;1659:32:1;;;1641:51;;1735:14;;1728:22;1723:2;1708:18;;1701:50;1614:18;199:36:0;1473:284:1;297:189:0;362:4;450:5;456:4;450:11;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:21;-1:-1:-1;;;450:21:0;;;;:29;;475:4;450:29;;;-1:-1:-1;;297:189:0:o;492:213::-;558:21;574:4;558:15;:21::i;:::-;557:22;549:67;;;;-1:-1:-1;;;549:67:0;;2397:2:1;549:67:0;;;2379:21:1;;;2416:18;;;2409:30;2475:34;2455:18;;;2448:62;2527:18;;549:67:0;;;;;;;;;650:10;626:5;632:4;626:11;;;;;;:::i;:::-;;;;;;;;;;;;;;:34;;-1:-1:-1;;;;;626:34:0;;;;-1:-1:-1;;;;;;626:34:0;;;;;;;;;;;;;;670:11;;676:4;;670:11;:::i;:::-;;;;;;;;;;;;;;:28;;;;;-1:-1:-1;;;670:28:0;-1:-1:-1;;;;670:28:0;;;;;;;;;-1:-1:-1;492:213:0:o;711:207::-;776:21;792:4;776:15;:21::i;:::-;768:60;;;;-1:-1:-1;;;768:60:0;;2758:2:1;768:60:0;;;2740:21:1;2797:2;2777:18;;;2770:30;2836:28;2816:18;;;2809:56;2882:18;;768:60:0;2556:350:1;768:60:0;870:1;838:5;844:4;838:11;;;;;;:::i;:::-;;;;;;;;;;;;;;:34;;-1:-1:-1;;;;;838:34:0;;;;-1:-1:-1;;;;;;838:34:0;;;;;;;;;;:21;;:34;;882:11;;888:4;;882:11;:::i;14:127:1:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:922;215:6;268:2;256:9;247:7;243:23;239:32;236:52;;;284:1;281;274:12;236:52;324:9;311:23;353:18;394:2;386:6;383:14;380:34;;;410:1;407;400:12;380:34;448:6;437:9;433:22;423:32;;493:7;486:4;482:2;478:13;474:27;464:55;;515:1;512;505:12;464:55;551:2;538:16;573:2;569;566:10;563:36;;;579:18;;:::i;:::-;654:2;648:9;622:2;708:13;;-1:-1:-1;;704:22:1;;;728:2;700:31;696:40;684:53;;;752:18;;;772:22;;;749:46;746:72;;;798:18;;:::i;:::-;838:10;834:2;827:22;873:2;865:6;858:18;913:7;908:2;903;899;895:11;891:20;888:33;885:53;;;934:1;931;924:12;885:53;990:2;985;981;977:11;972:2;964:6;960:15;947:46;1035:1;1013:15;;;1030:2;1009:24;1002:35;;;;-1:-1:-1;1017:6:1;146:922;-1:-1:-1;;;;;146:922:1:o;1762:428::-;1893:3;1931:6;1925:13;1956:1;1966:129;1980:6;1977:1;1974:13;1966:129;;;2078:4;2062:14;;;2058:25;;2052:32;2039:11;;;2032:53;1995:12;1966:129;;;2113:6;2110:1;2107:13;2104:48;;;2148:1;2139:6;2134:3;2130:16;2123:27;2104:48;-1:-1:-1;2168:16:1;;;;;1762:428;-1:-1:-1;;1762:428:1:o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    70,
    920
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2688AF26 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x68E66B83 EQ PUSH2 0x84 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x99 JUMPI DUP1 PUSH4 0xB90A74E8 EQ PUSH2 0xC4 JUMPI DUP1 PUSH4 0xCEBDC1C5 EQ PUSH2 0xD7 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6F PUSH2 0x6A CALLDATASIZE PUSH1 0x4 PUSH2 0x306 JUMP JUMPDEST PUSH2 0x136 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x97 PUSH2 0x92 CALLDATASIZE PUSH1 0x4 PUSH2 0x306 JUMP JUMPDEST PUSH2 0x170 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0xAC SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x7B JUMP JUMPDEST PUSH2 0x97 PUSH2 0xD2 CALLDATASIZE PUSH1 0x4 PUSH2 0x306 JUMP JUMPDEST PUSH2 0x248 JUMP JUMPDEST PUSH2 0x117 PUSH2 0xE5 CALLDATASIZE PUSH1 0x4 PUSH2 0x306 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD DUP1 MLOAD PUSH1 0x1 DUP3 MSTORE SWAP3 DUP3 ADD SWAP2 SWAP1 SWAP4 ADD KECCAK256 SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND DUP4 MSTORE SWAP1 ISZERO ISZERO PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH2 0x7B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 PUSH1 0x40 MLOAD PUSH2 0x148 SWAP2 SWAP1 PUSH2 0x3B7 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD PUSH1 0x20 SWAP2 DUP2 SWAP1 SUB SWAP2 SWAP1 SWAP2 ADD SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x179 DUP2 PUSH2 0x136 JUMP JUMPDEST ISZERO PUSH2 0x1CB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436572746966696361746520697320616C726561647920617661696C61626C65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x1 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1DC SWAP2 SWAP1 PUSH2 0x3B7 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH1 0x1 SWAP1 DUP2 SWAP1 PUSH2 0x21C SWAP1 DUP5 SWAP1 PUSH2 0x3B7 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 DUP1 SLOAD SWAP2 ISZERO ISZERO PUSH1 0x1 PUSH1 0xA0 SHL MUL PUSH1 0xFF PUSH1 0xA0 SHL NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x251 DUP2 PUSH2 0x136 JUMP JUMPDEST PUSH2 0x29D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436572746966696361746520646F6573206E6F74206578697374000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1C2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 PUSH1 0x40 MLOAD PUSH2 0x2AF SWAP2 SWAP1 PUSH2 0x3B7 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x21C SWAP1 DUP5 SWAP1 PUSH2 0x3B7 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x318 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x330 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP5 ADD SWAP2 POP DUP5 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x344 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x356 JUMPI PUSH2 0x356 PUSH2 0x2F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x37E JUMPI PUSH2 0x37E PUSH2 0x2F0 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP8 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x397 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP3 DUP2 ADD PUSH1 0x20 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3D8 JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD DUP6 DUP4 ADD MSTORE ADD PUSH2 0x3BE JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x3E7 JUMPI PUSH1 0x0 DUP3 DUP6 ADD MSTORE JUMPDEST POP SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP2 MSTORE8 CALLDATALOAD STOP CALLCODE 0x22 INVALID 0xDE 0xF7 0xB3 0x5C GASPRICE 0xC6 CHAINID DUP13 0xC ADDMOD 0xF 0xED PUSH32 0x27D5EC9C324E65FF8B83FDDC64736F6C634300080B0033000000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        70,
        920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        70,
        920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        70,
        920
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5": {
      "fn": null,
      "offset": [
        70,
        920
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "6": {
      "fn": null,
      "offset": [
        70,
        920
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7": {
      "fn": null,
      "offset": [
        70,
        920
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "8": {
      "fn": null,
      "offset": [
        70,
        920
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        70,
        920
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "12": {
      "fn": null,
      "offset": [
        70,
        920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        70,
        920
      ],
      "op": "DUP1",
      "path": "0"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        70,
        920
      ],
      "op": "REVERT",
      "path": "0"
    },
    "16": {
      "fn": null,
      "offset": [
        70,
        920
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "17": {
      "fn": null,
      "offset": [
        70,
        920
      ],
      "op": "POP",
      "path": "0"
    },
    "18": {
      "fn": null,
      "offset": [
        70,
        920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        70,
        920
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "21": {
      "fn": null,
      "offset": [
        70,
        920
      ],
      "op": "LT",
      "path": "0"
    },
    "22": {
      "fn": null,
      "offset": [
        70,
        920
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x57"
    },
    "25": {
      "fn": null,
      "offset": [
        70,
        920
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "26": {
      "fn": null,
      "offset": [
        70,
        920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        70,
        920
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "29": {
      "fn": null,
      "offset": [
        70,
        920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        70,
        920
      ],
      "op": "SHR",
      "path": "0"
    },
    "32": {
      "fn": null,
      "offset": [
        70,
        920
      ],
      "op": "DUP1",
      "path": "0"
    },
    "33": {
      "fn": null,
      "offset": [
        70,
        920
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x2688AF26"
    },
    "38": {
      "fn": null,
      "offset": [
        70,
        920
      ],
      "op": "EQ",
      "path": "0"
    },
    "39": {
      "fn": null,
      "offset": [
        70,
        920
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5C"
    },
    "42": {
      "fn": null,
      "offset": [
        70,
        920
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "43": {
      "fn": null,
      "offset": [
        70,
        920
      ],
      "op": "DUP1",
      "path": "0"
    },
    "44": {
      "fn": null,
      "offset": [
        70,
        920
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x68E66B83"
    },
    "49": {
      "fn": null,
      "offset": [
        70,
        920
      ],
      "op": "EQ",
      "path": "0"
    },
    "50": {
      "fn": null,
      "offset": [
        70,
        920
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x84"
    },
    "53": {
      "fn": null,
      "offset": [
        70,
        920
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "54": {
      "fn": null,
      "offset": [
        70,
        920
      ],
      "op": "DUP1",
      "path": "0"
    },
    "55": {
      "fn": null,
      "offset": [
        70,
        920
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x8DA5CB5B"
    },
    "60": {
      "fn": null,
      "offset": [
        70,
        920
      ],
      "op": "EQ",
      "path": "0"
    },
    "61": {
      "fn": null,
      "offset": [
        70,
        920
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x99"
    },
    "64": {
      "fn": null,
      "offset": [
        70,
        920
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "65": {
      "fn": null,
      "offset": [
        70,
        920
      ],
      "op": "DUP1",
      "path": "0"
    },
    "66": {
      "fn": null,
      "offset": [
        70,
        920
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xB90A74E8"
    },
    "71": {
      "fn": null,
      "offset": [
        70,
        920
      ],
      "op": "EQ",
      "path": "0"
    },
    "72": {
      "fn": null,
      "offset": [
        70,
        920
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC4"
    },
    "75": {
      "fn": null,
      "offset": [
        70,
        920
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "76": {
      "fn": null,
      "offset": [
        70,
        920
      ],
      "op": "DUP1",
      "path": "0"
    },
    "77": {
      "fn": null,
      "offset": [
        70,
        920
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xCEBDC1C5"
    },
    "82": {
      "fn": null,
      "offset": [
        70,
        920
      ],
      "op": "EQ",
      "path": "0"
    },
    "83": {
      "fn": null,
      "offset": [
        70,
        920
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD7"
    },
    "86": {
      "fn": null,
      "offset": [
        70,
        920
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "87": {
      "fn": null,
      "offset": [
        70,
        920
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "88": {
      "fn": null,
      "offset": [
        70,
        920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "90": {
      "fn": null,
      "offset": [
        70,
        920
      ],
      "op": "DUP1",
      "path": "0"
    },
    "91": {
      "first_revert": true,
      "fn": null,
      "offset": [
        70,
        920
      ],
      "op": "REVERT",
      "path": "0"
    },
    "92": {
      "fn": "Certificate.isCertAvailable",
      "offset": [
        297,
        486
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "93": {
      "fn": "Certificate.isCertAvailable",
      "offset": [
        297,
        486
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6F"
    },
    "96": {
      "fn": "Certificate.isCertAvailable",
      "offset": [
        297,
        486
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6A"
    },
    "99": {
      "fn": "Certificate.isCertAvailable",
      "offset": [
        297,
        486
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "100": {
      "fn": "Certificate.isCertAvailable",
      "offset": [
        297,
        486
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "102": {
      "fn": "Certificate.isCertAvailable",
      "offset": [
        297,
        486
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x306"
    },
    "105": {
      "fn": "Certificate.isCertAvailable",
      "jump": "i",
      "offset": [
        297,
        486
      ],
      "op": "JUMP",
      "path": "0"
    },
    "106": {
      "fn": "Certificate.isCertAvailable",
      "offset": [
        297,
        486
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "107": {
      "fn": "Certificate.isCertAvailable",
      "offset": [
        297,
        486
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x136"
    },
    "110": {
      "fn": "Certificate.isCertAvailable",
      "jump": "i",
      "offset": [
        297,
        486
      ],
      "op": "JUMP",
      "path": "0"
    },
    "111": {
      "fn": "Certificate.isCertAvailable",
      "offset": [
        297,
        486
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "112": {
      "fn": "Certificate.isCertAvailable",
      "offset": [
        297,
        486
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "114": {
      "fn": "Certificate.isCertAvailable",
      "offset": [
        297,
        486
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "115": {
      "op": "SWAP1"
    },
    "116": {
      "op": "ISZERO"
    },
    "117": {
      "op": "ISZERO"
    },
    "118": {
      "op": "DUP2"
    },
    "119": {
      "op": "MSTORE"
    },
    "120": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "122": {
      "op": "ADD"
    },
    "123": {
      "fn": "Certificate.isCertAvailable",
      "offset": [
        297,
        486
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "124": {
      "fn": "Certificate.isCertAvailable",
      "offset": [
        297,
        486
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "126": {
      "fn": "Certificate.isCertAvailable",
      "offset": [
        297,
        486
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "127": {
      "fn": "Certificate.isCertAvailable",
      "offset": [
        297,
        486
      ],
      "op": "DUP1",
      "path": "0"
    },
    "128": {
      "fn": "Certificate.isCertAvailable",
      "offset": [
        297,
        486
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "129": {
      "fn": "Certificate.isCertAvailable",
      "offset": [
        297,
        486
      ],
      "op": "SUB",
      "path": "0"
    },
    "130": {
      "fn": "Certificate.isCertAvailable",
      "offset": [
        297,
        486
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "131": {
      "fn": "Certificate.isCertAvailable",
      "offset": [
        297,
        486
      ],
      "op": "RETURN",
      "path": "0"
    },
    "132": {
      "fn": "Certificate.createCert",
      "offset": [
        492,
        705
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "133": {
      "fn": "Certificate.createCert",
      "offset": [
        492,
        705
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x97"
    },
    "136": {
      "fn": "Certificate.createCert",
      "offset": [
        492,
        705
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x92"
    },
    "139": {
      "fn": "Certificate.createCert",
      "offset": [
        492,
        705
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "140": {
      "fn": "Certificate.createCert",
      "offset": [
        492,
        705
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "142": {
      "fn": "Certificate.createCert",
      "offset": [
        492,
        705
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x306"
    },
    "145": {
      "fn": "Certificate.createCert",
      "jump": "i",
      "offset": [
        492,
        705
      ],
      "op": "JUMP",
      "path": "0"
    },
    "146": {
      "fn": "Certificate.createCert",
      "offset": [
        492,
        705
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "147": {
      "fn": "Certificate.createCert",
      "offset": [
        492,
        705
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x170"
    },
    "150": {
      "fn": "Certificate.createCert",
      "jump": "i",
      "offset": [
        492,
        705
      ],
      "op": "JUMP",
      "path": "0"
    },
    "151": {
      "fn": "Certificate.createCert",
      "offset": [
        492,
        705
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "152": {
      "fn": "Certificate.createCert",
      "offset": [
        492,
        705
      ],
      "op": "STOP",
      "path": "0"
    },
    "153": {
      "offset": [
        97,
        117
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "154": {
      "fn": "Certificate.createCert",
      "offset": [
        97,
        117
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "156": {
      "fn": "Certificate.createCert",
      "offset": [
        97,
        117
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "157": {
      "fn": "Certificate.createCert",
      "offset": [
        97,
        117
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAC"
    },
    "160": {
      "fn": "Certificate.createCert",
      "offset": [
        97,
        117
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "161": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "163": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "165": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "167": {
      "op": "SHL"
    },
    "168": {
      "op": "SUB"
    },
    "169": {
      "offset": [
        97,
        117
      ],
      "op": "AND",
      "path": "0"
    },
    "170": {
      "fn": "Certificate.createCert",
      "offset": [
        97,
        117
      ],
      "op": "DUP2",
      "path": "0"
    },
    "171": {
      "fn": "Certificate.createCert",
      "offset": [
        97,
        117
      ],
      "op": "JUMP",
      "path": "0"
    },
    "172": {
      "fn": "Certificate.createCert",
      "offset": [
        97,
        117
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "173": {
      "fn": "Certificate.createCert",
      "offset": [
        97,
        117
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "175": {
      "fn": "Certificate.createCert",
      "offset": [
        97,
        117
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "176": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "178": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "180": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "182": {
      "op": "SHL"
    },
    "183": {
      "op": "SUB"
    },
    "184": {
      "op": "SWAP1"
    },
    "185": {
      "op": "SWAP2"
    },
    "186": {
      "op": "AND"
    },
    "187": {
      "op": "DUP2"
    },
    "188": {
      "op": "MSTORE"
    },
    "189": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "191": {
      "op": "ADD"
    },
    "192": {
      "offset": [
        97,
        117
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7B"
    },
    "195": {
      "op": "JUMP"
    },
    "196": {
      "fn": "Certificate.deleteCert",
      "offset": [
        711,
        918
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "197": {
      "fn": "Certificate.deleteCert",
      "offset": [
        711,
        918
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x97"
    },
    "200": {
      "fn": "Certificate.deleteCert",
      "offset": [
        711,
        918
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD2"
    },
    "203": {
      "fn": "Certificate.deleteCert",
      "offset": [
        711,
        918
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "204": {
      "fn": "Certificate.deleteCert",
      "offset": [
        711,
        918
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "206": {
      "fn": "Certificate.deleteCert",
      "offset": [
        711,
        918
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x306"
    },
    "209": {
      "fn": "Certificate.deleteCert",
      "jump": "i",
      "offset": [
        711,
        918
      ],
      "op": "JUMP",
      "path": "0"
    },
    "210": {
      "fn": "Certificate.deleteCert",
      "offset": [
        711,
        918
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "211": {
      "fn": "Certificate.deleteCert",
      "offset": [
        711,
        918
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x248"
    },
    "214": {
      "fn": "Certificate.deleteCert",
      "jump": "i",
      "offset": [
        711,
        918
      ],
      "op": "JUMP",
      "path": "0"
    },
    "215": {
      "offset": [
        199,
        235
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "216": {
      "fn": "Certificate.deleteCert",
      "offset": [
        199,
        235
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x117"
    },
    "219": {
      "fn": "Certificate.deleteCert",
      "offset": [
        199,
        235
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE5"
    },
    "222": {
      "fn": "Certificate.deleteCert",
      "offset": [
        199,
        235
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "223": {
      "fn": "Certificate.deleteCert",
      "offset": [
        199,
        235
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "225": {
      "fn": "Certificate.deleteCert",
      "offset": [
        199,
        235
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x306"
    },
    "228": {
      "fn": "Certificate.deleteCert",
      "jump": "i",
      "offset": [
        199,
        235
      ],
      "op": "JUMP",
      "path": "0"
    },
    "229": {
      "fn": "Certificate.deleteCert",
      "offset": [
        199,
        235
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "230": {
      "fn": "Certificate.deleteCert",
      "offset": [
        199,
        235
      ],
      "op": "DUP1",
      "path": "0"
    },
    "231": {
      "fn": "Certificate.deleteCert",
      "offset": [
        199,
        235
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "232": {
      "fn": "Certificate.deleteCert",
      "offset": [
        199,
        235
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "234": {
      "fn": "Certificate.deleteCert",
      "offset": [
        199,
        235
      ],
      "op": "DUP2",
      "path": "0"
    },
    "235": {
      "fn": "Certificate.deleteCert",
      "offset": [
        199,
        235
      ],
      "op": "DUP4",
      "path": "0"
    },
    "236": {
      "fn": "Certificate.deleteCert",
      "offset": [
        199,
        235
      ],
      "op": "ADD",
      "path": "0"
    },
    "237": {
      "fn": "Certificate.deleteCert",
      "offset": [
        199,
        235
      ],
      "op": "DUP2",
      "path": "0"
    },
    "238": {
      "fn": "Certificate.deleteCert",
      "offset": [
        199,
        235
      ],
      "op": "ADD",
      "path": "0"
    },
    "239": {
      "fn": "Certificate.deleteCert",
      "offset": [
        199,
        235
      ],
      "op": "DUP1",
      "path": "0"
    },
    "240": {
      "fn": "Certificate.deleteCert",
      "offset": [
        199,
        235
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "241": {
      "fn": "Certificate.deleteCert",
      "offset": [
        199,
        235
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "243": {
      "fn": "Certificate.deleteCert",
      "offset": [
        199,
        235
      ],
      "op": "DUP3",
      "path": "0"
    },
    "244": {
      "fn": "Certificate.deleteCert",
      "offset": [
        199,
        235
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "245": {
      "fn": "Certificate.deleteCert",
      "offset": [
        199,
        235
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "246": {
      "fn": "Certificate.deleteCert",
      "offset": [
        199,
        235
      ],
      "op": "DUP3",
      "path": "0"
    },
    "247": {
      "fn": "Certificate.deleteCert",
      "offset": [
        199,
        235
      ],
      "op": "ADD",
      "path": "0"
    },
    "248": {
      "fn": "Certificate.deleteCert",
      "offset": [
        199,
        235
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "249": {
      "fn": "Certificate.deleteCert",
      "offset": [
        199,
        235
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "250": {
      "fn": "Certificate.deleteCert",
      "offset": [
        199,
        235
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "251": {
      "fn": "Certificate.deleteCert",
      "offset": [
        199,
        235
      ],
      "op": "ADD",
      "path": "0"
    },
    "252": {
      "fn": "Certificate.deleteCert",
      "offset": [
        199,
        235
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "253": {
      "fn": "Certificate.deleteCert",
      "offset": [
        199,
        235
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "254": {
      "fn": "Certificate.deleteCert",
      "offset": [
        199,
        235
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "255": {
      "fn": "Certificate.deleteCert",
      "offset": [
        199,
        235
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "256": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "258": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "260": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "262": {
      "op": "SHL"
    },
    "263": {
      "op": "SUB"
    },
    "264": {
      "offset": [
        199,
        235
      ],
      "op": "DUP2",
      "path": "0"
    },
    "265": {
      "fn": "Certificate.deleteCert",
      "offset": [
        199,
        235
      ],
      "op": "AND",
      "path": "0"
    },
    "266": {
      "fn": "Certificate.deleteCert",
      "offset": [
        199,
        235
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "267": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "269": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "271": {
      "op": "SHL"
    },
    "272": {
      "offset": [
        199,
        235
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "273": {
      "fn": "Certificate.deleteCert",
      "offset": [
        199,
        235
      ],
      "op": "DIV",
      "path": "0"
    },
    "274": {
      "fn": "Certificate.deleteCert",
      "offset": [
        199,
        235
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "276": {
      "fn": "Certificate.deleteCert",
      "offset": [
        199,
        235
      ],
      "op": "AND",
      "path": "0"
    },
    "277": {
      "fn": "Certificate.deleteCert",
      "offset": [
        199,
        235
      ],
      "op": "DUP3",
      "path": "0"
    },
    "278": {
      "fn": "Certificate.deleteCert",
      "offset": [
        199,
        235
      ],
      "op": "JUMP",
      "path": "0"
    },
    "279": {
      "fn": "Certificate.deleteCert",
      "offset": [
        199,
        235
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "280": {
      "fn": "Certificate.deleteCert",
      "offset": [
        199,
        235
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "282": {
      "fn": "Certificate.deleteCert",
      "offset": [
        199,
        235
      ],
      "op": "DUP1",
      "path": "0"
    },
    "283": {
      "fn": "Certificate.deleteCert",
      "offset": [
        199,
        235
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "284": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "286": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "288": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "290": {
      "op": "SHL"
    },
    "291": {
      "op": "SUB"
    },
    "292": {
      "op": "SWAP1"
    },
    "293": {
      "op": "SWAP4"
    },
    "294": {
      "op": "AND"
    },
    "295": {
      "op": "DUP4"
    },
    "296": {
      "op": "MSTORE"
    },
    "297": {
      "op": "SWAP1"
    },
    "298": {
      "op": "ISZERO"
    },
    "299": {
      "op": "ISZERO"
    },
    "300": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "302": {
      "op": "DUP4"
    },
    "303": {
      "op": "ADD"
    },
    "304": {
      "op": "MSTORE"
    },
    "305": {
      "op": "ADD"
    },
    "306": {
      "offset": [
        199,
        235
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7B"
    },
    "309": {
      "op": "JUMP"
    },
    "310": {
      "fn": "Certificate.isCertAvailable",
      "offset": [
        297,
        486
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "311": {
      "fn": "Certificate.isCertAvailable",
      "offset": [
        362,
        366
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "313": {
      "fn": "Certificate.isCertAvailable",
      "offset": [
        450,
        455
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 0,
      "value": "0x1"
    },
    "315": {
      "fn": "Certificate.isCertAvailable",
      "offset": [
        456,
        460
      ],
      "op": "DUP3",
      "path": "0"
    },
    "316": {
      "fn": "Certificate.isCertAvailable",
      "offset": [
        450,
        461
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "318": {
      "fn": "Certificate.isCertAvailable",
      "offset": [
        450,
        461
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "319": {
      "fn": "Certificate.isCertAvailable",
      "offset": [
        450,
        461
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x148"
    },
    "322": {
      "fn": "Certificate.isCertAvailable",
      "offset": [
        450,
        461
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "323": {
      "fn": "Certificate.isCertAvailable",
      "offset": [
        450,
        461
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "324": {
      "fn": "Certificate.isCertAvailable",
      "offset": [
        450,
        461
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3B7"
    },
    "327": {
      "fn": "Certificate.isCertAvailable",
      "jump": "i",
      "offset": [
        450,
        461
      ],
      "op": "JUMP",
      "path": "0"
    },
    "328": {
      "fn": "Certificate.isCertAvailable",
      "offset": [
        450,
        461
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "329": {
      "fn": "Certificate.isCertAvailable",
      "offset": [
        450,
        461
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "330": {
      "fn": "Certificate.isCertAvailable",
      "offset": [
        450,
        461
      ],
      "op": "DUP2",
      "path": "0"
    },
    "331": {
      "fn": "Certificate.isCertAvailable",
      "offset": [
        450,
        461
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "332": {
      "fn": "Certificate.isCertAvailable",
      "offset": [
        450,
        461
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "334": {
      "fn": "Certificate.isCertAvailable",
      "offset": [
        450,
        461
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "335": {
      "fn": "Certificate.isCertAvailable",
      "offset": [
        450,
        461
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "337": {
      "fn": "Certificate.isCertAvailable",
      "offset": [
        450,
        461
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "338": {
      "fn": "Certificate.isCertAvailable",
      "offset": [
        450,
        461
      ],
      "op": "DUP2",
      "path": "0"
    },
    "339": {
      "fn": "Certificate.isCertAvailable",
      "offset": [
        450,
        461
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "340": {
      "fn": "Certificate.isCertAvailable",
      "offset": [
        450,
        461
      ],
      "op": "SUB",
      "path": "0"
    },
    "341": {
      "fn": "Certificate.isCertAvailable",
      "offset": [
        450,
        461
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "342": {
      "fn": "Certificate.isCertAvailable",
      "offset": [
        450,
        461
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "343": {
      "fn": "Certificate.isCertAvailable",
      "offset": [
        450,
        461
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "344": {
      "fn": "Certificate.isCertAvailable",
      "offset": [
        450,
        461
      ],
      "op": "ADD",
      "path": "0"
    },
    "345": {
      "fn": "Certificate.isCertAvailable",
      "offset": [
        450,
        461
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "346": {
      "fn": "Certificate.isCertAvailable",
      "offset": [
        450,
        461
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "347": {
      "fn": "Certificate.isCertAvailable",
      "offset": [
        450,
        471
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "348": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "350": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "352": {
      "op": "SHL"
    },
    "353": {
      "fn": "Certificate.isCertAvailable",
      "offset": [
        450,
        471
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "354": {
      "fn": "Certificate.isCertAvailable",
      "offset": [
        450,
        471
      ],
      "op": "DIV",
      "path": "0"
    },
    "355": {
      "fn": "Certificate.isCertAvailable",
      "offset": [
        450,
        471
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "357": {
      "fn": "Certificate.isCertAvailable",
      "offset": [
        450,
        471
      ],
      "op": "AND",
      "path": "0"
    },
    "358": {
      "fn": "Certificate.isCertAvailable",
      "offset": [
        450,
        479
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "359": {
      "fn": "Certificate.isCertAvailable",
      "offset": [
        450,
        479
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "360": {
      "fn": "Certificate.isCertAvailable",
      "offset": [
        475,
        479
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "362": {
      "fn": "Certificate.isCertAvailable",
      "offset": [
        450,
        479
      ],
      "op": "EQ",
      "path": "0"
    },
    "363": {
      "fn": "Certificate.isCertAvailable",
      "offset": [
        450,
        479
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "364": {
      "fn": "Certificate.isCertAvailable",
      "offset": [
        450,
        479
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "365": {
      "op": "POP"
    },
    "366": {
      "op": "POP"
    },
    "367": {
      "fn": "Certificate.isCertAvailable",
      "jump": "o",
      "offset": [
        297,
        486
      ],
      "op": "JUMP",
      "path": "0"
    },
    "368": {
      "fn": "Certificate.createCert",
      "offset": [
        492,
        705
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "369": {
      "fn": "Certificate.createCert",
      "offset": [
        558,
        579
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 1,
      "value": "0x179"
    },
    "372": {
      "fn": "Certificate.createCert",
      "offset": [
        574,
        578
      ],
      "op": "DUP2",
      "path": "0"
    },
    "373": {
      "fn": "Certificate.createCert",
      "offset": [
        558,
        573
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x136"
    },
    "376": {
      "fn": "Certificate.createCert",
      "jump": "i",
      "offset": [
        558,
        579
      ],
      "op": "JUMP",
      "path": "0"
    },
    "377": {
      "fn": "Certificate.createCert",
      "offset": [
        558,
        579
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "378": {
      "branch": 7,
      "fn": "Certificate.createCert",
      "offset": [
        557,
        579
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "379": {
      "fn": "Certificate.createCert",
      "offset": [
        549,
        616
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1CB"
    },
    "382": {
      "branch": 7,
      "fn": "Certificate.createCert",
      "offset": [
        549,
        616
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "383": {
      "fn": "Certificate.createCert",
      "offset": [
        549,
        616
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "385": {
      "fn": "Certificate.createCert",
      "offset": [
        549,
        616
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "386": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "390": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "392": {
      "op": "SHL"
    },
    "393": {
      "fn": "Certificate.createCert",
      "offset": [
        549,
        616
      ],
      "op": "DUP2",
      "path": "0"
    },
    "394": {
      "fn": "Certificate.createCert",
      "offset": [
        549,
        616
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "395": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "397": {
      "fn": "Certificate.createCert",
      "offset": [
        549,
        616
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "399": {
      "fn": "Certificate.createCert",
      "offset": [
        549,
        616
      ],
      "op": "DUP3",
      "path": "0"
    },
    "400": {
      "fn": "Certificate.createCert",
      "offset": [
        549,
        616
      ],
      "op": "ADD",
      "path": "0"
    },
    "401": {
      "op": "DUP2"
    },
    "402": {
      "op": "SWAP1"
    },
    "403": {
      "op": "MSTORE"
    },
    "404": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "406": {
      "op": "DUP3"
    },
    "407": {
      "op": "ADD"
    },
    "408": {
      "op": "MSTORE"
    },
    "409": {
      "op": "PUSH32",
      "value": "0x436572746966696361746520697320616C726561647920617661696C61626C65"
    },
    "442": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "444": {
      "op": "DUP3"
    },
    "445": {
      "op": "ADD"
    },
    "446": {
      "op": "MSTORE"
    },
    "447": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "449": {
      "op": "ADD"
    },
    "450": {
      "fn": "Certificate.createCert",
      "offset": [
        549,
        616
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "451": {
      "fn": "Certificate.createCert",
      "offset": [
        549,
        616
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "453": {
      "fn": "Certificate.createCert",
      "offset": [
        549,
        616
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "454": {
      "fn": "Certificate.createCert",
      "offset": [
        549,
        616
      ],
      "op": "DUP1",
      "path": "0"
    },
    "455": {
      "fn": "Certificate.createCert",
      "offset": [
        549,
        616
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "456": {
      "fn": "Certificate.createCert",
      "offset": [
        549,
        616
      ],
      "op": "SUB",
      "path": "0"
    },
    "457": {
      "fn": "Certificate.createCert",
      "offset": [
        549,
        616
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "458": {
      "fn": "Certificate.createCert",
      "offset": [
        549,
        616
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "459": {
      "fn": "Certificate.createCert",
      "offset": [
        549,
        616
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "460": {
      "fn": "Certificate.createCert",
      "offset": [
        650,
        660
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 2
    },
    "461": {
      "fn": "Certificate.createCert",
      "offset": [
        626,
        631
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "463": {
      "fn": "Certificate.createCert",
      "offset": [
        632,
        636
      ],
      "op": "DUP3",
      "path": "0"
    },
    "464": {
      "fn": "Certificate.createCert",
      "offset": [
        626,
        637
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "466": {
      "fn": "Certificate.createCert",
      "offset": [
        626,
        637
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "467": {
      "fn": "Certificate.createCert",
      "offset": [
        626,
        637
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DC"
    },
    "470": {
      "fn": "Certificate.createCert",
      "offset": [
        626,
        637
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "471": {
      "fn": "Certificate.createCert",
      "offset": [
        626,
        637
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "472": {
      "fn": "Certificate.createCert",
      "offset": [
        626,
        637
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3B7"
    },
    "475": {
      "fn": "Certificate.createCert",
      "jump": "i",
      "offset": [
        626,
        637
      ],
      "op": "JUMP",
      "path": "0"
    },
    "476": {
      "fn": "Certificate.createCert",
      "offset": [
        626,
        637
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "477": {
      "fn": "Certificate.createCert",
      "offset": [
        626,
        637
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "478": {
      "fn": "Certificate.createCert",
      "offset": [
        626,
        637
      ],
      "op": "DUP2",
      "path": "0"
    },
    "479": {
      "fn": "Certificate.createCert",
      "offset": [
        626,
        637
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "480": {
      "fn": "Certificate.createCert",
      "offset": [
        626,
        637
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "482": {
      "fn": "Certificate.createCert",
      "offset": [
        626,
        637
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "483": {
      "fn": "Certificate.createCert",
      "offset": [
        626,
        637
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "484": {
      "fn": "Certificate.createCert",
      "offset": [
        626,
        637
      ],
      "op": "DUP2",
      "path": "0"
    },
    "485": {
      "fn": "Certificate.createCert",
      "offset": [
        626,
        637
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "486": {
      "fn": "Certificate.createCert",
      "offset": [
        626,
        637
      ],
      "op": "SUB",
      "path": "0"
    },
    "487": {
      "fn": "Certificate.createCert",
      "offset": [
        626,
        637
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "489": {
      "fn": "Certificate.createCert",
      "offset": [
        626,
        637
      ],
      "op": "ADD",
      "path": "0"
    },
    "490": {
      "fn": "Certificate.createCert",
      "offset": [
        626,
        637
      ],
      "op": "DUP2",
      "path": "0"
    },
    "491": {
      "fn": "Certificate.createCert",
      "offset": [
        626,
        637
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "492": {
      "fn": "Certificate.createCert",
      "offset": [
        626,
        660
      ],
      "op": "DUP1",
      "path": "0"
    },
    "493": {
      "fn": "Certificate.createCert",
      "offset": [
        626,
        660
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "494": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "496": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "498": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "500": {
      "op": "SHL"
    },
    "501": {
      "op": "SUB"
    },
    "502": {
      "fn": "Certificate.createCert",
      "offset": [
        626,
        660
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "503": {
      "fn": "Certificate.createCert",
      "offset": [
        626,
        660
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "504": {
      "fn": "Certificate.createCert",
      "offset": [
        626,
        660
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "505": {
      "fn": "Certificate.createCert",
      "offset": [
        626,
        660
      ],
      "op": "AND",
      "path": "0"
    },
    "506": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "508": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "510": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "512": {
      "op": "SHL"
    },
    "513": {
      "op": "SUB"
    },
    "514": {
      "op": "NOT"
    },
    "515": {
      "fn": "Certificate.createCert",
      "offset": [
        626,
        660
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "516": {
      "fn": "Certificate.createCert",
      "offset": [
        626,
        660
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "517": {
      "fn": "Certificate.createCert",
      "offset": [
        626,
        660
      ],
      "op": "AND",
      "path": "0"
    },
    "518": {
      "fn": "Certificate.createCert",
      "offset": [
        626,
        660
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "519": {
      "fn": "Certificate.createCert",
      "offset": [
        626,
        660
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "520": {
      "fn": "Certificate.createCert",
      "offset": [
        626,
        660
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "521": {
      "fn": "Certificate.createCert",
      "offset": [
        626,
        660
      ],
      "op": "OR",
      "path": "0"
    },
    "522": {
      "fn": "Certificate.createCert",
      "offset": [
        626,
        660
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "523": {
      "fn": "Certificate.createCert",
      "offset": [
        626,
        660
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "524": {
      "fn": "Certificate.createCert",
      "offset": [
        626,
        660
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "525": {
      "fn": "Certificate.createCert",
      "offset": [
        626,
        660
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "527": {
      "fn": "Certificate.createCert",
      "offset": [
        626,
        660
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "528": {
      "fn": "Certificate.createCert",
      "offset": [
        626,
        660
      ],
      "op": "DUP2",
      "path": "0"
    },
    "529": {
      "fn": "Certificate.createCert",
      "offset": [
        626,
        660
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "530": {
      "fn": "Certificate.createCert",
      "offset": [
        670,
        681
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 3,
      "value": "0x21C"
    },
    "533": {
      "fn": "Certificate.createCert",
      "offset": [
        670,
        681
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "534": {
      "fn": "Certificate.createCert",
      "offset": [
        676,
        680
      ],
      "op": "DUP5",
      "path": "0"
    },
    "535": {
      "fn": "Certificate.createCert",
      "offset": [
        676,
        680
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "536": {
      "fn": "Certificate.createCert",
      "offset": [
        670,
        681
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3B7"
    },
    "539": {
      "fn": "Certificate.createCert",
      "jump": "i",
      "offset": [
        670,
        681
      ],
      "op": "JUMP",
      "path": "0"
    },
    "540": {
      "fn": "Certificate.createCert",
      "offset": [
        670,
        681
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "541": {
      "fn": "Certificate.createCert",
      "offset": [
        670,
        681
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "542": {
      "fn": "Certificate.createCert",
      "offset": [
        670,
        681
      ],
      "op": "DUP2",
      "path": "0"
    },
    "543": {
      "fn": "Certificate.createCert",
      "offset": [
        670,
        681
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "544": {
      "fn": "Certificate.createCert",
      "offset": [
        670,
        681
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "546": {
      "fn": "Certificate.createCert",
      "offset": [
        670,
        681
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "547": {
      "fn": "Certificate.createCert",
      "offset": [
        670,
        681
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "548": {
      "fn": "Certificate.createCert",
      "offset": [
        670,
        681
      ],
      "op": "DUP2",
      "path": "0"
    },
    "549": {
      "fn": "Certificate.createCert",
      "offset": [
        670,
        681
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "550": {
      "fn": "Certificate.createCert",
      "offset": [
        670,
        681
      ],
      "op": "SUB",
      "path": "0"
    },
    "551": {
      "fn": "Certificate.createCert",
      "offset": [
        670,
        681
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "553": {
      "fn": "Certificate.createCert",
      "offset": [
        670,
        681
      ],
      "op": "ADD",
      "path": "0"
    },
    "554": {
      "fn": "Certificate.createCert",
      "offset": [
        670,
        681
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "555": {
      "fn": "Certificate.createCert",
      "offset": [
        670,
        681
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "556": {
      "fn": "Certificate.createCert",
      "offset": [
        670,
        698
      ],
      "op": "DUP1",
      "path": "0"
    },
    "557": {
      "fn": "Certificate.createCert",
      "offset": [
        670,
        698
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "558": {
      "fn": "Certificate.createCert",
      "offset": [
        670,
        698
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "559": {
      "fn": "Certificate.createCert",
      "offset": [
        670,
        698
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "560": {
      "fn": "Certificate.createCert",
      "offset": [
        670,
        698
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "561": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "563": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "565": {
      "op": "SHL"
    },
    "566": {
      "fn": "Certificate.createCert",
      "offset": [
        670,
        698
      ],
      "op": "MUL",
      "path": "0"
    },
    "567": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "569": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "571": {
      "op": "SHL"
    },
    "572": {
      "op": "NOT"
    },
    "573": {
      "fn": "Certificate.createCert",
      "offset": [
        670,
        698
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "574": {
      "fn": "Certificate.createCert",
      "offset": [
        670,
        698
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "575": {
      "fn": "Certificate.createCert",
      "offset": [
        670,
        698
      ],
      "op": "AND",
      "path": "0"
    },
    "576": {
      "fn": "Certificate.createCert",
      "offset": [
        670,
        698
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "577": {
      "fn": "Certificate.createCert",
      "offset": [
        670,
        698
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "578": {
      "fn": "Certificate.createCert",
      "offset": [
        670,
        698
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "579": {
      "fn": "Certificate.createCert",
      "offset": [
        670,
        698
      ],
      "op": "OR",
      "path": "0"
    },
    "580": {
      "fn": "Certificate.createCert",
      "offset": [
        670,
        698
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "581": {
      "fn": "Certificate.createCert",
      "offset": [
        670,
        698
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "582": {
      "op": "POP"
    },
    "583": {
      "fn": "Certificate.createCert",
      "jump": "o",
      "offset": [
        492,
        705
      ],
      "op": "JUMP",
      "path": "0"
    },
    "584": {
      "fn": "Certificate.deleteCert",
      "offset": [
        711,
        918
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "585": {
      "fn": "Certificate.deleteCert",
      "offset": [
        776,
        797
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 4,
      "value": "0x251"
    },
    "588": {
      "fn": "Certificate.deleteCert",
      "offset": [
        792,
        796
      ],
      "op": "DUP2",
      "path": "0"
    },
    "589": {
      "fn": "Certificate.deleteCert",
      "offset": [
        776,
        791
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x136"
    },
    "592": {
      "fn": "Certificate.deleteCert",
      "jump": "i",
      "offset": [
        776,
        797
      ],
      "op": "JUMP",
      "path": "0"
    },
    "593": {
      "branch": 8,
      "fn": "Certificate.deleteCert",
      "offset": [
        776,
        797
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "594": {
      "fn": "Certificate.deleteCert",
      "offset": [
        768,
        828
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x29D"
    },
    "597": {
      "branch": 8,
      "fn": "Certificate.deleteCert",
      "offset": [
        768,
        828
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "598": {
      "fn": "Certificate.deleteCert",
      "offset": [
        768,
        828
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "600": {
      "fn": "Certificate.deleteCert",
      "offset": [
        768,
        828
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "601": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "605": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "607": {
      "op": "SHL"
    },
    "608": {
      "fn": "Certificate.deleteCert",
      "offset": [
        768,
        828
      ],
      "op": "DUP2",
      "path": "0"
    },
    "609": {
      "fn": "Certificate.deleteCert",
      "offset": [
        768,
        828
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "610": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "612": {
      "fn": "Certificate.deleteCert",
      "offset": [
        768,
        828
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "614": {
      "fn": "Certificate.deleteCert",
      "offset": [
        768,
        828
      ],
      "op": "DUP3",
      "path": "0"
    },
    "615": {
      "fn": "Certificate.deleteCert",
      "offset": [
        768,
        828
      ],
      "op": "ADD",
      "path": "0"
    },
    "616": {
      "op": "MSTORE"
    },
    "617": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "619": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "621": {
      "op": "DUP3"
    },
    "622": {
      "op": "ADD"
    },
    "623": {
      "op": "MSTORE"
    },
    "624": {
      "op": "PUSH32",
      "value": "0x436572746966696361746520646F6573206E6F74206578697374000000000000"
    },
    "657": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "659": {
      "op": "DUP3"
    },
    "660": {
      "op": "ADD"
    },
    "661": {
      "op": "MSTORE"
    },
    "662": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "664": {
      "op": "ADD"
    },
    "665": {
      "fn": "Certificate.deleteCert",
      "offset": [
        768,
        828
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C2"
    },
    "668": {
      "op": "JUMP"
    },
    "669": {
      "fn": "Certificate.deleteCert",
      "offset": [
        768,
        828
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "670": {
      "fn": "Certificate.deleteCert",
      "offset": [
        870,
        871
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 5,
      "value": "0x0"
    },
    "672": {
      "fn": "Certificate.deleteCert",
      "offset": [
        838,
        843
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "674": {
      "fn": "Certificate.deleteCert",
      "offset": [
        844,
        848
      ],
      "op": "DUP3",
      "path": "0"
    },
    "675": {
      "fn": "Certificate.deleteCert",
      "offset": [
        838,
        849
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "677": {
      "fn": "Certificate.deleteCert",
      "offset": [
        838,
        849
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "678": {
      "fn": "Certificate.deleteCert",
      "offset": [
        838,
        849
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2AF"
    },
    "681": {
      "fn": "Certificate.deleteCert",
      "offset": [
        838,
        849
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "682": {
      "fn": "Certificate.deleteCert",
      "offset": [
        838,
        849
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "683": {
      "fn": "Certificate.deleteCert",
      "offset": [
        838,
        849
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3B7"
    },
    "686": {
      "fn": "Certificate.deleteCert",
      "jump": "i",
      "offset": [
        838,
        849
      ],
      "op": "JUMP",
      "path": "0"
    },
    "687": {
      "fn": "Certificate.deleteCert",
      "offset": [
        838,
        849
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "688": {
      "fn": "Certificate.deleteCert",
      "offset": [
        838,
        849
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "689": {
      "fn": "Certificate.deleteCert",
      "offset": [
        838,
        849
      ],
      "op": "DUP2",
      "path": "0"
    },
    "690": {
      "fn": "Certificate.deleteCert",
      "offset": [
        838,
        849
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "691": {
      "fn": "Certificate.deleteCert",
      "offset": [
        838,
        849
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "693": {
      "fn": "Certificate.deleteCert",
      "offset": [
        838,
        849
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "694": {
      "fn": "Certificate.deleteCert",
      "offset": [
        838,
        849
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "695": {
      "fn": "Certificate.deleteCert",
      "offset": [
        838,
        849
      ],
      "op": "DUP2",
      "path": "0"
    },
    "696": {
      "fn": "Certificate.deleteCert",
      "offset": [
        838,
        849
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "697": {
      "fn": "Certificate.deleteCert",
      "offset": [
        838,
        849
      ],
      "op": "SUB",
      "path": "0"
    },
    "698": {
      "fn": "Certificate.deleteCert",
      "offset": [
        838,
        849
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "700": {
      "fn": "Certificate.deleteCert",
      "offset": [
        838,
        849
      ],
      "op": "ADD",
      "path": "0"
    },
    "701": {
      "fn": "Certificate.deleteCert",
      "offset": [
        838,
        849
      ],
      "op": "DUP2",
      "path": "0"
    },
    "702": {
      "fn": "Certificate.deleteCert",
      "offset": [
        838,
        849
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "703": {
      "fn": "Certificate.deleteCert",
      "offset": [
        838,
        872
      ],
      "op": "DUP1",
      "path": "0"
    },
    "704": {
      "fn": "Certificate.deleteCert",
      "offset": [
        838,
        872
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "705": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "707": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "709": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "711": {
      "op": "SHL"
    },
    "712": {
      "op": "SUB"
    },
    "713": {
      "fn": "Certificate.deleteCert",
      "offset": [
        838,
        872
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "714": {
      "fn": "Certificate.deleteCert",
      "offset": [
        838,
        872
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "715": {
      "fn": "Certificate.deleteCert",
      "offset": [
        838,
        872
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "716": {
      "fn": "Certificate.deleteCert",
      "offset": [
        838,
        872
      ],
      "op": "AND",
      "path": "0"
    },
    "717": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "719": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "721": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "723": {
      "op": "SHL"
    },
    "724": {
      "op": "SUB"
    },
    "725": {
      "op": "NOT"
    },
    "726": {
      "fn": "Certificate.deleteCert",
      "offset": [
        838,
        872
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "727": {
      "fn": "Certificate.deleteCert",
      "offset": [
        838,
        872
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "728": {
      "fn": "Certificate.deleteCert",
      "offset": [
        838,
        872
      ],
      "op": "AND",
      "path": "0"
    },
    "729": {
      "fn": "Certificate.deleteCert",
      "offset": [
        838,
        872
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "730": {
      "fn": "Certificate.deleteCert",
      "offset": [
        838,
        872
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "731": {
      "fn": "Certificate.deleteCert",
      "offset": [
        838,
        872
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "732": {
      "fn": "Certificate.deleteCert",
      "offset": [
        838,
        872
      ],
      "op": "OR",
      "path": "0"
    },
    "733": {
      "fn": "Certificate.deleteCert",
      "offset": [
        838,
        872
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "734": {
      "fn": "Certificate.deleteCert",
      "offset": [
        838,
        872
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "735": {
      "fn": "Certificate.deleteCert",
      "offset": [
        838,
        872
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "736": {
      "fn": "Certificate.deleteCert",
      "offset": [
        838,
        859
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "738": {
      "fn": "Certificate.deleteCert",
      "offset": [
        838,
        859
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "739": {
      "fn": "Certificate.deleteCert",
      "offset": [
        838,
        872
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "741": {
      "fn": "Certificate.deleteCert",
      "offset": [
        838,
        872
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "742": {
      "fn": "Certificate.deleteCert",
      "offset": [
        882,
        893
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 6,
      "value": "0x21C"
    },
    "745": {
      "fn": "Certificate.deleteCert",
      "offset": [
        882,
        893
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "746": {
      "fn": "Certificate.deleteCert",
      "offset": [
        888,
        892
      ],
      "op": "DUP5",
      "path": "0"
    },
    "747": {
      "fn": "Certificate.deleteCert",
      "offset": [
        888,
        892
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "748": {
      "fn": "Certificate.deleteCert",
      "offset": [
        882,
        893
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3B7"
    },
    "751": {
      "fn": "Certificate.deleteCert",
      "jump": "i",
      "offset": [
        882,
        893
      ],
      "op": "JUMP",
      "path": "0"
    },
    "752": {
      "op": "JUMPDEST"
    },
    "753": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "758": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "760": {
      "op": "SHL"
    },
    "761": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "763": {
      "op": "MSTORE"
    },
    "764": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "766": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "768": {
      "op": "MSTORE"
    },
    "769": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "771": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "773": {
      "op": "REVERT"
    },
    "774": {
      "op": "JUMPDEST"
    },
    "775": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "777": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "779": {
      "op": "DUP3"
    },
    "780": {
      "op": "DUP5"
    },
    "781": {
      "op": "SUB"
    },
    "782": {
      "op": "SLT"
    },
    "783": {
      "op": "ISZERO"
    },
    "784": {
      "op": "PUSH2",
      "value": "0x318"
    },
    "787": {
      "op": "JUMPI"
    },
    "788": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "790": {
      "op": "DUP1"
    },
    "791": {
      "op": "REVERT"
    },
    "792": {
      "op": "JUMPDEST"
    },
    "793": {
      "op": "DUP2"
    },
    "794": {
      "op": "CALLDATALOAD"
    },
    "795": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "804": {
      "op": "DUP1"
    },
    "805": {
      "op": "DUP3"
    },
    "806": {
      "op": "GT"
    },
    "807": {
      "op": "ISZERO"
    },
    "808": {
      "op": "PUSH2",
      "value": "0x330"
    },
    "811": {
      "op": "JUMPI"
    },
    "812": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "814": {
      "op": "DUP1"
    },
    "815": {
      "op": "REVERT"
    },
    "816": {
      "op": "JUMPDEST"
    },
    "817": {
      "op": "DUP2"
    },
    "818": {
      "op": "DUP5"
    },
    "819": {
      "op": "ADD"
    },
    "820": {
      "op": "SWAP2"
    },
    "821": {
      "op": "POP"
    },
    "822": {
      "op": "DUP5"
    },
    "823": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "825": {
      "op": "DUP4"
    },
    "826": {
      "op": "ADD"
    },
    "827": {
      "op": "SLT"
    },
    "828": {
      "op": "PUSH2",
      "value": "0x344"
    },
    "831": {
      "op": "JUMPI"
    },
    "832": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "834": {
      "op": "DUP1"
    },
    "835": {
      "op": "REVERT"
    },
    "836": {
      "op": "JUMPDEST"
    },
    "837": {
      "op": "DUP2"
    },
    "838": {
      "op": "CALLDATALOAD"
    },
    "839": {
      "op": "DUP2"
    },
    "840": {
      "op": "DUP2"
    },
    "841": {
      "op": "GT"
    },
    "842": {
      "op": "ISZERO"
    },
    "843": {
      "op": "PUSH2",
      "value": "0x356"
    },
    "846": {
      "op": "JUMPI"
    },
    "847": {
      "op": "PUSH2",
      "value": "0x356"
    },
    "850": {
      "op": "PUSH2",
      "value": "0x2F0"
    },
    "853": {
      "jump": "i",
      "op": "JUMP"
    },
    "854": {
      "op": "JUMPDEST"
    },
    "855": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "857": {
      "op": "MLOAD"
    },
    "858": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "860": {
      "op": "DUP3"
    },
    "861": {
      "op": "ADD"
    },
    "862": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "864": {
      "op": "NOT"
    },
    "865": {
      "op": "SWAP1"
    },
    "866": {
      "op": "DUP2"
    },
    "867": {
      "op": "AND"
    },
    "868": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "870": {
      "op": "ADD"
    },
    "871": {
      "op": "AND"
    },
    "872": {
      "op": "DUP2"
    },
    "873": {
      "op": "ADD"
    },
    "874": {
      "op": "SWAP1"
    },
    "875": {
      "op": "DUP4"
    },
    "876": {
      "op": "DUP3"
    },
    "877": {
      "op": "GT"
    },
    "878": {
      "op": "DUP2"
    },
    "879": {
      "op": "DUP4"
    },
    "880": {
      "op": "LT"
    },
    "881": {
      "op": "OR"
    },
    "882": {
      "op": "ISZERO"
    },
    "883": {
      "op": "PUSH2",
      "value": "0x37E"
    },
    "886": {
      "op": "JUMPI"
    },
    "887": {
      "op": "PUSH2",
      "value": "0x37E"
    },
    "890": {
      "op": "PUSH2",
      "value": "0x2F0"
    },
    "893": {
      "jump": "i",
      "op": "JUMP"
    },
    "894": {
      "op": "JUMPDEST"
    },
    "895": {
      "op": "DUP2"
    },
    "896": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "898": {
      "op": "MSTORE"
    },
    "899": {
      "op": "DUP3"
    },
    "900": {
      "op": "DUP2"
    },
    "901": {
      "op": "MSTORE"
    },
    "902": {
      "op": "DUP8"
    },
    "903": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "905": {
      "op": "DUP5"
    },
    "906": {
      "op": "DUP8"
    },
    "907": {
      "op": "ADD"
    },
    "908": {
      "op": "ADD"
    },
    "909": {
      "op": "GT"
    },
    "910": {
      "op": "ISZERO"
    },
    "911": {
      "op": "PUSH2",
      "value": "0x397"
    },
    "914": {
      "op": "JUMPI"
    },
    "915": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "917": {
      "op": "DUP1"
    },
    "918": {
      "op": "REVERT"
    },
    "919": {
      "op": "JUMPDEST"
    },
    "920": {
      "op": "DUP3"
    },
    "921": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "923": {
      "op": "DUP7"
    },
    "924": {
      "op": "ADD"
    },
    "925": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "927": {
      "op": "DUP4"
    },
    "928": {
      "op": "ADD"
    },
    "929": {
      "op": "CALLDATACOPY"
    },
    "930": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "932": {
      "op": "SWAP3"
    },
    "933": {
      "op": "DUP2"
    },
    "934": {
      "op": "ADD"
    },
    "935": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "937": {
      "op": "ADD"
    },
    "938": {
      "op": "SWAP3"
    },
    "939": {
      "op": "SWAP1"
    },
    "940": {
      "op": "SWAP3"
    },
    "941": {
      "op": "MSTORE"
    },
    "942": {
      "op": "POP"
    },
    "943": {
      "op": "SWAP6"
    },
    "944": {
      "op": "SWAP5"
    },
    "945": {
      "op": "POP"
    },
    "946": {
      "op": "POP"
    },
    "947": {
      "op": "POP"
    },
    "948": {
      "op": "POP"
    },
    "949": {
      "op": "POP"
    },
    "950": {
      "jump": "o",
      "op": "JUMP"
    },
    "951": {
      "op": "JUMPDEST"
    },
    "952": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "954": {
      "op": "DUP3"
    },
    "955": {
      "op": "MLOAD"
    },
    "956": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "958": {
      "op": "JUMPDEST"
    },
    "959": {
      "op": "DUP2"
    },
    "960": {
      "op": "DUP2"
    },
    "961": {
      "op": "LT"
    },
    "962": {
      "op": "ISZERO"
    },
    "963": {
      "op": "PUSH2",
      "value": "0x3D8"
    },
    "966": {
      "op": "JUMPI"
    },
    "967": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "969": {
      "op": "DUP2"
    },
    "970": {
      "op": "DUP7"
    },
    "971": {
      "op": "ADD"
    },
    "972": {
      "op": "DUP2"
    },
    "973": {
      "op": "ADD"
    },
    "974": {
      "op": "MLOAD"
    },
    "975": {
      "op": "DUP6"
    },
    "976": {
      "op": "DUP4"
    },
    "977": {
      "op": "ADD"
    },
    "978": {
      "op": "MSTORE"
    },
    "979": {
      "op": "ADD"
    },
    "980": {
      "op": "PUSH2",
      "value": "0x3BE"
    },
    "983": {
      "op": "JUMP"
    },
    "984": {
      "op": "JUMPDEST"
    },
    "985": {
      "op": "DUP2"
    },
    "986": {
      "op": "DUP2"
    },
    "987": {
      "op": "GT"
    },
    "988": {
      "op": "ISZERO"
    },
    "989": {
      "op": "PUSH2",
      "value": "0x3E7"
    },
    "992": {
      "op": "JUMPI"
    },
    "993": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "995": {
      "op": "DUP3"
    },
    "996": {
      "op": "DUP6"
    },
    "997": {
      "op": "ADD"
    },
    "998": {
      "op": "MSTORE"
    },
    "999": {
      "op": "JUMPDEST"
    },
    "1000": {
      "op": "POP"
    },
    "1001": {
      "op": "SWAP2"
    },
    "1002": {
      "op": "SWAP1"
    },
    "1003": {
      "op": "SWAP2"
    },
    "1004": {
      "op": "ADD"
    },
    "1005": {
      "op": "SWAP3"
    },
    "1006": {
      "op": "SWAP2"
    },
    "1007": {
      "op": "POP"
    },
    "1008": {
      "op": "POP"
    },
    "1009": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "52e42304c82976cd473d73ba0130408f4f109b9e",
  "source": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity >=0.7.0 <0.9.0;\n\ncontract Certificate {\n    address public owner;\n\n    struct cert {\n        address recipient;\n        bool confirmed;\n    }\n    mapping(string => cert) public certs;\n\n    constructor() {\n        owner = msg.sender;\n    }\n\n    function isCertAvailable(string memory cert) public view returns(bool) {\n//        if (certs[cert].recipient != msg.sender) return false;\n        return certs[cert].confirmed == true;\n    }\n\n    function createCert(string memory cert) public {\n        require(!isCertAvailable(cert), \"Certificate is already available\");\n        certs[cert].recipient = msg.sender;\n        certs[cert].confirmed = true;\n    }\n\n    function deleteCert(string memory cert) public {\n        require(isCertAvailable(cert), \"Certificate does not exist\");\n        certs[cert].recipient = address(0);\n        certs[cert].confirmed = false;\n    }\n}\n",
  "sourceMap": "70:850:0:-:0;;;242:49;;;;;;;;;-1:-1:-1;266:5:0;:18;;-1:-1:-1;;;;;;266:18:0;274:10;266:18;;;70:850;;;;;;",
  "sourcePath": "contracts/Certificate.sol",
  "type": "contract"
}